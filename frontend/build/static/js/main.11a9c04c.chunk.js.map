{"version":3,"sources":["axios.conf.js","constants/userConstants.js","actions/userActions.js","components/Header.js","components/Menu.js","components/Footer.js","components/HeaderContent.js","components/loader/DataTableLoader.js","components/Search.js","components/Loader.js","components/Message.js","components/loader/LoaderHandler.js","components/Pagination.js","constants/orderConstants.js","actions/orderActions.js","screens/order/OrderScreen.js","screens/order/DeliveryScreen.js","components/ButtonGoBack.js","components/form/Textarea.js","components/form/Checkbox.js","components/loader/SvgLoaders.js","actions/productActions.js","constants/productConstants.js","components/order/ProductsTable.js","components/order/OrderInfo.js","components/Select.js","components/order/OrderCart.js","constants/tableConstants.js","actions/tableActions.js","actions/clientActions.js","constants/clientConstants.js","screens/order/OrderCreateScreen.js","components/ViewBox.js","components/ModalButton.js","screens/order/OrderViewScreen .js","components/Table.js","components/loader/SkeletonLoaders.js","screens/order/ActiveOrdersScreen.js","screens/order/OrderEditScreen.js","components/form/Input.js","screens/table/TableScreen.js","screens/table/TableEditScreen.js","constants/categoryConstants.js","actions/categoryActions.js","screens/product/ProductScreen.js","screens/product/ProductEditScreen.js","screens/client/ClientScreen.js","screens/client/ClientEditScreen.js","screens/category/CategoryScreen.js","screens/category/CategoryEditScreen.js","screens/user/UserScreen.js","screens/user/UserEditScreen.js","components/form/FileInput.js","screens/user/ProfileScreen.js","components/SmallBox.js","components/DeliveryListItem.js","screens/DashboardScreen.js","auth/index.js","auth/PrivateRoute.js","screens/NotFoundScreen.js","auth/AdminRoute.js","screens/NotAuthorizedScreen.js","Main.js","screens/auth/LoginScreen.js","App.js","serviceWorker.js","reducers/userReducers.js","store.js","reducers/categoryReducers.js","reducers/productReducers.js","reducers/tableReducers.js","reducers/clientReducers.js","reducers/orderReducers.js","index.js","utils/functions.js","utils/styles.js"],"names":["axios","create","baseURL","login","email","password","async","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","listUserDetails","id","getState","userLogin","userInfo","Authorization","concat","token","get","Header","useDispatch","handleLogout","e","preventDefault","removeItem","React","createElement","className","data-widget","href","role","style","cursor","onClick","data-slide","Menu","_ref","history","useSelector","state","useEffect","redirectTo","Redirect","to","pathname","referrer","Link","src","alt","opacity","image","name","data-accordion","isAdmin","Fragment","Footer","HeaderContent","DataTableLoader","props","ContentLoader","Object","assign","speed","backgroundColor","foregroundColor","width","height","x","y","rx","ry","Search","keyword","setKeyword","setPage","searchTerm","setSearchTerm","useState","handleClickButton","value","onChange","target","placeholder","onKeyPress","event","key","Loader","variable","Message","color","LoaderHandler","loading","loader","render","Pagination","pages","page","disabled","Array","keys","map","listOrders","options","pageNumber","delivery","listOrderDetails","OrderScreen","setPageNumber","orderList","orders","renderTable","order","client","table","isPaid","total","DeliveryScreen","address","phone","ButtonGoBack","handleClick","goBack","Textarea","title","rows","setData","Checkbox","defaultValue","checked","htmlFor","capitalize","BigSpin","listProducts","arguments","length","undefined","ProductsTable","productsInOrder","setProductsInOrder","productsAlreadyOrdered","products","setProducts","productList","loadingProductList","errorProductList","productsFromState","mapProducts","inOrder","obj","list","index","refreshProducts","productsToMap","item","item2","stock","quantity","renderProducts","product","price","productInOrder","find","productIn","showStock","addProduct","alert","OrderInfo","setTotal","totalPrice","productsIn","reduce","acc","toFixed","Select","items","search","current","setCurrent","mapSelect","forEach","label","ReactSelect","element","parseInt","onKeyDown","onFocus","isDisabled","isSearchable","OrderCart","i","removeUnit","newProducts","el","addUnit","removeProduct","filter","listTables","listClients","OrderCreateScreen","match","tableFromUrl","window","location","indexOf","deliveryFromUrl","setTable","params","setClient","setDelivery","note","setNote","errors","setErrors","clientList","clients","tableList","tables","orderCreate","success","push","handleSubmit","errorsCheck","createOrder","tableId","clientId","searchTables","searchClients","occupied","ViewBox","paragraph","icon","ModalButton","modal","setModal","classes","OrderViewScreen","orderId","orderDetails","orderUpdate","loadingUpdate","successUpdate","errorUpdate","handlePay","updatedOrder","updateOrderToPaid","handleEdit","Modal","modalStyles","isOpen","onRequestClose","onSubmit","renderInfo","OrderProduct","renderOrderButton","renderPayButton","Table","OccupiedTableLoader","viewBox","FreeTableLoader","SkeletonBoxes","tableSkeleton","SkeletonSales","ActiveOrdersScreen","tableAll","filterTablesByState","isOccupied","occupiedTableLoader","renderOccupiedTables","freeTableLoader","renderFreeTables","OrderEditScreen","setProductsAlreadyOrdered","put","updateOrder","tableItem","Input","aria-describedby","setAppElement","TableScreen","setName","modalIsOpen","setModalIsOpen","tableCreate","createLoading","createSuccess","createError","createTable","createdAt","slice","TableEditScreen","setOccupied","tableDetails","tableUpdate","updateTable","renderForm","listCategories","ProductScreen","setPrice","setStock","category","setCategory","categoryList","categories","productCreate","createProduct","categoryId","searchCategories","renderProductsTable","ProductEditScreen","productId","productDetails","productUpdate","updateProduct","ClientScreen","setAddress","setPhone","setEmail","dni","setDni","clientCreate","createClient","renderClientsTable","ClientEditScreen","clientDetails","clientUpdate","updateClient","CategoryScreen","categoryCreate","createCategory","CategoryEditScreen","categoryDetails","categoryUpdate","updateCategory","UserScreen","setPassword","setIsAdmin","userList","users","userRegister","listUsers","user","register","UserEditScreen","userId","avatar","setAvatar","userDetails","userUpdate","updateUser","FileInput","fileHandler","uploading","ProfileScreen","confirmPassword","setConfirmPassword","passwordCheck","setPasswordCheck","setImage","setUploading","_id","handleModalSubmit","updateProfile","uploadingFileHandler","file","files","formData","FormData","append","console","imageName","split","renderProfile","SmallBox","number","link","DeliveryListItem","DashboardScreen","orderStatistics","sales","statistics","ordersInPlace","ordersForDelivery","renderSmallBoxes","renderSales","returnSales","indents","deliveries","today","data-card-widget","renderOrders","splice","handleRowClick","renderDeliveries","isAuthenticated","getItem","parse","PrivateRoute","component","Component","rest","Route","from","NotFoundScreen","AdminRoute","NotAuthorizedScreen","Main","Switch","path","exact","LoginScreen","App","Router","Boolean","hostname","reducer","combineReducers","action","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","exports","s","charAt","toUpperCase","content","top","left","right","bottom","marginRight","transform"],"mappings":"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","file":"static/js/main.11a9c04c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://api-comandera.flippoapp.com\",\n})","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\nexport const USER_DELETE_RESET = \"USER_DELETE_RESET\";\n","import axios from \"../axios.conf\";\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DETAILS_RESET,\n} from \"./../constants/userConstants\";\n\n//login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        //get login data\n        const { data } = await axios.post(\n            \"api/users/login\",\n            { email, password },\n            config\n        );\n        \n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        //set user info into local storage\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//logout\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: USER_DETAILS_RESET });\n    dispatch({ type: USER_LOGOUT });\n};\n\n//get all users\nexport const listUsers =\n    (keyword = \"\", pageNumber = \"\") =>\n    async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_LIST_REQUEST,\n            });\n\n            //get user from state\n            const {\n                userLogin: { userInfo },\n            } = getState();\n\n            //headers\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            };\n\n            //get all users\n            const { data } = await axios.get(\n                `api/users?keyword=${keyword}&pageNumber=${pageNumber}`,\n                config\n            );\n            dispatch({\n                type: USER_LIST_SUCCESS,\n                payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: USER_LIST_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            });\n        }\n    };\n\n//register an user\nexport const register = (user) => async (dispatch, getState) => {\n    const { name, email, password, isAdmin } = user;\n\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //get login data\n        const { data } = await axios.post(\n            \"api/users\",\n            { name, email, password, isAdmin },\n            config\n        );\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get user details\nexport const listUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get product\n        const { data } = await axios.get(`/api/users/${id}`, config);\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update an user\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update user\n        const { data } = await axios.put(`/api/users/${user.id}`, user, config);\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete user\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete user\n        await axios.delete(`/api/users/${id}`, config);\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update profile\nexport const updateProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update user\n        const { data } = await axios.put(\n            `api/users/profile/${user.id}`,\n            user,\n            config\n        );\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../actions/userActions';\n\n\nconst Header = () => {\n    \n    const dispatch = useDispatch()\n    const handleLogout = (e) => {\n        e.preventDefault()\n        dispatch(logout())\n       \n    }\n    return ( \n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n            {/* Left navbar links */}\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"/\" role=\"button\"><i className=\"fas fa-bars\" /></a>\n                </li>\n\n            </ul>\n\n            {/* Right navbar links */}\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                <span\n                    style={{cursor:'pointer'}} \n                    onClick={(e) => handleLogout(e)}\n                    className=\"nav-link\" \n                    data-widget=\"control-sidebar\" \n                    data-slide=\"true\"  \n                    role=\"button\">\n                        <i className=\"fas fa-power-off\"></i> Logout\n                </span>\n                </li>\n            </ul>\n        </nav>\n   \n     );\n}\n \nexport default Header;","import React, { useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Menu = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (!userInfo) {\n            redirectTo();\n        }\n    }, [dispatch, userInfo]);\n\n    const redirectTo = () => {\n        return (\n            <Redirect\n                to={{\n                    pathname: \"/login\",\n                    state: { referrer: \"/\" },\n                }}\n            />\n        );\n    };\n\n    return (\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\n            {/* Brand Logo */}\n            <Link to={\"/dashboard\"} className=\"brand-link\">\n                <img\n                    src=\"/logo.png\"\n                    alt=\"AdminLTE Logo\"\n                    className=\"brand-image img-circle elevation-3\"\n                    style={{ opacity: \".8\" }}\n                />\n                <span className=\"brand-text font-weight-light\">BAKANO</span>\n            </Link>\n            {/* Sidebar */}\n            <div className=\"sidebar\">\n                {/* Sidebar user panel (optional) */}\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n                    <div className=\"image\">\n                        <img\n                            src={userInfo ? userInfo.image : \"/comandera.webp\"}\n                            className=\"img-circle elevation-2\"\n                            alt=\"User\"\n                        />\n                    </div>\n                    <div className=\"info\">\n                        <Link to=\"/profile\" className=\"d-block\">\n                            {userInfo ? userInfo.name : \"\"}\n                        </Link>\n                    </div>\n                </div>\n                {/* Sidebar Menu */}\n                <nav className=\"mt-2\">\n                    <ul\n                        className=\"nav nav-pills nav-sidebar flex-column\"\n                        data-widget=\"treeview\"\n                        role=\"menu\"\n                        data-accordion=\"false\"\n                    >\n                        <li className=\"nav-item\">\n                            <Link to=\"/dashboard\" className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-tachometer-alt\" />{\" \"}\n                                <p> Dashboard</p>\n                            </Link>\n                        </li>\n\n                        {!userInfo ? (\n                            \"\"\n                        ) : userInfo.isAdmin === true ? (\n                            <>\n                                <li className=\"nav-header\">ADMIN</li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/user\" className=\"nav-link\">\n                                        <i className=\"nav-icon fas fa-users\" />{\" \"}\n                                        <p> Users</p>\n                                    </Link>\n                                </li>\n                            </>\n                        ) : (\n                            \"\"\n                        )}\n\n                        <li className=\"nav-header\">COMANDERA</li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/active\" className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-bell\" />{\" \"}\n                                <p> Active Orders</p>\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"/delivery\" className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-truck\" />{\" \"}\n                                <p> Delivery</p>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/order\" className=\"nav-link\">\n                                <i className=\"nav-icon far fa-clipboard\" />{\" \"}\n                                <p> Orders</p>\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-header\">MANAGEMENT</li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"/category\" className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-list-alt\" />{\" \"}\n                                <p> Categories</p>\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"/product\" className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-hamburger\" />{\" \"}\n                                <p> Products</p>\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"/client\" className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-user\" />{\" \"}\n                                <p> Clients</p>\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"/table\" className=\"nav-link\">\n                                <i className=\"nav-icon fas fa-border-all\" />{\" \"}\n                                <p> Tables</p>\n                            </Link>\n                        </li>\n                    </ul>\n                </nav>\n                {/* /.sidebar-menu */}\n            </div>\n            {/* /.sidebar */}\n        </aside>\n    );\n};\n\nexport default Menu;\n","import React from 'react';\n\nconst Footer = () => {\n    return ( \n        <footer className=\"main-footer\">\n            <strong>Copyright © 2014-2019 <a href=\"http://adminlte.io\">AdminLTE.io</a>.</strong>\n            All rights reserved.\n            <div className=\"float-right d-none d-sm-inline-block\">\n                <b>Version</b> 3.0.5\n            </div>\n        </footer>\n     );\n}\n \nexport default Footer;","import React from 'react';\n\nconst HeaderContent = ({name}) => {\n    return ( \n        <section className=\"content-header\">\n            <div className=\"container-fluid\">\n            <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                <h1>{name}</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                <ol className=\"breadcrumb float-sm-right\">\n                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n                    <li className=\"breadcrumb-item active\">{name}</li>\n                </ol>\n                </div>\n            </div>\n            </div>{/* /.container-fluid */}\n        </section>\n     );\n}\n \nexport default HeaderContent;","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst DataTableLoader = (props) => (\n  <ContentLoader \n    speed={2}\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    style={{ width: '100%', height: '420px' }}\n    {...props}\n  >\n    <rect x=\"0\" y=\"5\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"50\" /> \n    <rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" /> \n    <rect x=\"0\" y=\"120\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n    <rect x=\"0\" y=\"180\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n    <rect x=\"0\" y=\"240\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n    <rect x=\"0\" y=\"300\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n    <rect x=\"0\" y=\"360\" rx=\"3\" ry=\"3\"  style={{ width: '100%'}} height=\"55\" />\n\n\n\n  </ContentLoader>\n)\n\nexport default DataTableLoader\n\n","import React, { useState } from \"react\";\n\nconst Search = ({ keyword, setKeyword, setPage }) => {\n    const [searchTerm, setSearchTerm] = useState(keyword);\n\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            handleClickButton();\n        }\n    };\n    const handleClickButton = () => {\n        setKeyword(searchTerm);\n        setPage(1);\n    };\n    return (\n        <div className=\"input-group input-group-sm\" style={{ width: 160 }}>\n            <input\n                value={searchTerm}\n                type=\"text\"\n                name=\"table_search\"\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"form-control float-right\"\n                placeholder=\"Search\"\n                onKeyPress={handleKeyPress}\n            />\n            <div className=\"input-group-append\">\n                <button\n                    onClick={handleClickButton}\n                    type=\"submit\"\n                    className=\"btn btn-default bg-primary\"\n                >\n                    <i className=\"fas fa-search\" />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Loader = ({ variable }) => {\n    return variable ? (\n        <div className=\"text-center\">\n            <div className=\"spinner-border text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    ) : (\n        \"\"\n    );\n};\n\nexport default Loader;\n","import React from 'react';\n\nconst Message = ({message, color}) => {\n    return message \n        ? \n        <div className={`alert alert-${color}`} role=\"alert\">\n          {message}\n        </div> \n        : \n        '';\n}\n \nexport default Message;","import React from \"react\";\n\nimport Loader from \"../Loader\";\nimport Message from \"../Message\";\n\nconst LoaderHandler = ({ loading, error, loader, render }) => {\n    return (\n        <>\n            {loading ? (\n                loader ? (\n                    loader\n                ) : (\n                    <Loader variable={loading} />\n                )\n            ) : error ? (\n                <Message message={error} color={\"danger\"} />\n            ) : render ? (\n                render()\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\nexport default LoaderHandler;\n","import React from \"react\";\n\nconst Pagination = ({ pages, page, setPage }) => {\n    return (\n        pages > 1 && (\n            <nav>\n                <ul className=\"pagination\">\n                    <li className=\"page-item\">\n                        <button\n                            className=\"page-link\"\n                            onClick={() => setPage(page - 1)}\n                            disabled={page < 2}\n                        >\n                            Previous\n                        </button>\n                    </li>\n                    {[...Array(pages).keys()].map((x) => (\n                        <li\n                            key={`page${x}`}\n                            className={`page-item ${\n                                x + 1 === page ? \"active\" : \"\"\n                            }`}\n                        >\n                            <button\n                                className={`page-link `}\n                                onClick={() => setPage(x + 1)}\n                            >\n                                {x + 1}\n                            </button>\n                        </li>\n                    ))}\n\n                    <li className=\"page-item\">\n                        <button\n                            className=\"page-link\"\n                            onClick={() => setPage(page + 1)}\n                            disabled={page >= pages}\n                        >\n                            Next\n                        </button>\n                    </li>\n                </ul>\n            </nav>\n        )\n    );\n};\n\nexport default Pagination;\n","export const ORDER_STATISTICS_REQUEST = \"ORDER_STATISTICS_REQUEST\";\nexport const ORDER_STATISTICS_SUCCESS = \"ORDER_STATISTICS_SUCCESS\";\nexport const ORDER_STATISTICS_FAIL = \"ORDER_STATISTICS_FAIL\";\nexport const ORDER_STATISTICS_RESET = \"ORDER_STATISTICS_RESET\";\n\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\nexport const ORDER_LIST_RESET = \"ORDER_LIST_RESET\";\n\nexport const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\n\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\nexport const ORDER_DETAILS_RESET = \"ORDER_DETAILS_RESET\";\n\nexport const ORDER_UPDATE_REQUEST = \"ORDER_UPDATE_REQUEST\";\nexport const ORDER_UPDATE_SUCCESS = \"ORDER_UPDATE_SUCCESS\";\nexport const ORDER_UPDATE_FAIL = \"ORDER_UPDATE_FAIL\";\nexport const ORDER_UPDATE_RESET = \"ORDER_UPDATE_RESET\";\n\nexport const ORDER_DELETE_REQUEST = \"ORDER_DELETE_REQUEST\";\nexport const ORDER_DELETE_SUCCESS = \"ORDER_DELETE_SUCCESS\";\nexport const ORDER_DELETE_FAIL = \"ORDER_DELETE_FAIL\";\nexport const ORDER_DELETE_RESET = \"ORDER_DELETE_RESET\";\n","import axios from \"../axios.conf\";\nimport {\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_UPDATE_REQUEST,\n    ORDER_UPDATE_SUCCESS,\n    ORDER_UPDATE_FAIL,\n    ORDER_DELETE_REQUEST,\n    ORDER_DELETE_SUCCESS,\n    ORDER_DELETE_FAIL,\n    ORDER_STATISTICS_REQUEST,\n    ORDER_STATISTICS_SUCCESS,\n    ORDER_STATISTICS_FAIL,\n} from \"../constants/orderConstants\";\n\n//get all sales\nexport const getStatistics = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_STATISTICS_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //get all sales\n        const { data } = await axios.get(`/api/orders/statistics`, config);\n\n        dispatch({\n            type: ORDER_STATISTICS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_STATISTICS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get all orders with pagination\nexport const listOrders = (options) => async (dispatch, getState) => {\n    const { keyword, pageNumber, delivery } = options;\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //get all orders\n        const { data } = await axios.get(\n            `api/orders/?keyword=${keyword}&pageNumber=${pageNumber}${\n                delivery ? \"&delivery=true\" : \"\"\n            }`,\n            config\n        );\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//create a order\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        });\n\n        //get order from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //create order\n        const { data } = await axios.post(\"/api/orders\", order, config);\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get order details\nexport const listOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get ORDER\n        const { data } = await axios.get(`/api/orders/${id}`, config);\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a order\nexport const updateOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update order\n        const { data } = await axios.put(\n            `api/orders/${order.id}`,\n            order,\n            config\n        );\n        dispatch({\n            type: ORDER_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a order\nexport const updateOrderToPaid = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n        //update order\n        const { data } = await axios.post(\n            `api/orders/${order.id}/pay`,\n            order,\n            config\n        );\n        dispatch({\n            type: ORDER_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete order\nexport const deleteOrder = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete order\n        await axios.delete(`/api/orders/${id}`, config);\n        dispatch({\n            type: ORDER_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport Search from \"../../components/Search\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Pagination from \"../../components/Pagination\";\n\n/* Actions */\nimport { listOrders } from \"../../actions/orderActions\";\n\nconst OrderScreen = ({ history }) => {\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, error, orders, page, pages } = orderList;\n\n    useEffect(() => {\n        dispatch(listOrders({ keyword, pageNumber, delivery: false }));\n    }, [dispatch, history, userInfo, pageNumber, keyword]);\n\n    const renderCreateButton = () => (\n        <Link to=\"/order/create\">\n            <button className=\"btn btn-success btn-lg\">\n                <i className=\"fas fa-edit\" /> New Order\n            </button>\n        </Link>\n    );\n\n    const renderTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Client</th>\n                    <th className=\"d-none d-sm-table-cell\">Table</th>\n                    <th>Paid</th>\n                    <th>Total</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {orders.map((order) => (\n                    <tr key={order.id}>\n                        <td>{order.id}</td>\n                        <td>{order.client.name}</td>\n                        <td className=\"d-none d-sm-table-cell h4\">\n                            {order.table ? (\n                                <span className={\"badge bg-primary\"}>\n                                    {order.table.name}\n                                </span>\n                            ) : (\n                                <span className={\"badge bg-info\"}>\n                                    DELIVERY\n                                </span>\n                            )}\n                        </td>\n                        <td>\n                            {order.isPaid ? (\n                                <h4 className=\"text-success\">\n                                    <i className=\"fas fa-check\"></i>\n                                </h4>\n                            ) : (\n                                <h4 className=\"text-danger\">\n                                    <i className=\"far fa-times-circle\"></i>\n                                </h4>\n                            )}\n                        </td>\n                        <td className=\"d-none d-sm-table-cell h4\">\n                            <span className={\"badge bg-success\"}>\n                                ${order.total}\n                            </span>\n                        </td>\n                        <td>\n                            <Link\n                                to={`/order/${order.id}/view`}\n                                className=\"btn btn-info btn-lg\"\n                            >\n                                View\n                            </Link>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    const renderOrders = () => (\n        <>\n            <div className=\"card \">\n                <div className=\"card-header\">\n                    <h3 className=\"card-title\">All orders</h3>\n                    <div className=\"card-tools\">\n                        <Search\n                            keyword={keyword}\n                            setKeyword={setKeyword}\n                            setPage={setPageNumber}\n                        />\n                    </div>\n                </div>\n                {/* /.card-header */}\n                <div className=\"card-body table-responsive p-0\">\n                    <LoaderHandler\n                        loading={loading}\n                        error={error}\n                        loader={DataTableLoader()}\n                        render={renderTable}\n                    />\n                </div>\n                {/* /.card-body */}\n            </div>\n\n            <Pagination page={page} pages={pages} setPage={setPageNumber} />\n        </>\n    );\n\n    return (\n        <>\n            <HeaderContent name={\"Orders\"} />\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            {renderCreateButton()}\n                            <hr />\n                            {renderOrders()}\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default OrderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Pagination from \"../../components/Pagination\";\nimport Search from \"../../components/Search\";\n\n/* actions */\nimport { listOrders } from \"../../actions/orderActions\";\n\nconst DeliveryScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState(\"\");\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, error, orders, page, pages } = orderList;\n\n    useEffect(() => {\n        dispatch(listOrders({ keyword, pageNumber, delivery: true }));\n    }, [dispatch, history, userInfo, pageNumber, keyword]);\n\n    const renderCreateButton = () => (\n        <Link to=\"/order/create/delivery\">\n            <button className=\"btn btn-success btn-lg\">\n                <i className=\"fas fa-truck\" /> New Delivery\n            </button>\n        </Link>\n    );\n\n    const renderTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Client</th>\n                    <th className=\"d-none d-sm-table-cell\">Address</th>\n                    <th className=\"d-none d-sm-table-cell\">Phone</th>\n                    <th>Check</th>\n                </tr>\n            </thead>\n            <tbody>\n                {orders.map((order) => (\n                    <tr key={order.id}>\n                        <td>{order.id}</td>\n                        <td>{order.client.name}</td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {order.client.address}\n                        </td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {order.client.phone}\n                        </td>\n                        <td>\n                            <Link\n                                to={`/order/${order.id}/view`}\n                                className=\"btn btn-info btn-lg\"\n                            >\n                                View\n                            </Link>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    const renderDeliveries = () => (\n        <>\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h3 className=\"card-title\">Active Delivery orders</h3>\n                    <div className=\"card-tools\">\n                        <Search\n                            keyword={keyword}\n                            setKeyword={setKeyword}\n                            setPage={setPageNumber}\n                        />\n                    </div>\n                </div>\n                {/* /.card-header */}\n                <div className=\"card-body table-responsive p-0\">\n                    <LoaderHandler\n                        loading={loading}\n                        error={error}\n                        loader={DataTableLoader()}\n                        render={renderTable}\n                    />\n                </div>\n                {/* /.card-body */}\n            </div>\n\n            <Pagination page={page} pages={pages} setPage={setPageNumber} />\n        </>\n    );\n\n    return (\n        <>\n            <HeaderContent name={\"Delivery\"} />\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            {renderCreateButton()}\n                            <hr />\n\n                            {renderDeliveries()}\n\n                            {/* /.card-body */}\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default DeliveryScreen;\n","import React from \"react\";\n\nconst ButtonGoBack = ({ history }) => {\n    const handleClick = () => {\n        history.goBack();\n    };\n\n    return (\n        <button onClick={handleClick} className=\"btn btn-info btn-lg mb-2\">\n            Go Back\n        </button>\n    );\n};\n\nexport default ButtonGoBack;\n","import React from 'react';\n\nconst Textarea = ({title, rows, data, setData}) => {\n    return ( \n        <div className=\"form-group\">\n            <label>{title}</label>\n            <textarea className=\"form-control\" rows={rows} placeholder=\"Enter ...\" value={data} onChange={(e) => setData(e.target.value)} />\n        </div>\n     );\n}\n \nexport default Textarea;","import React from \"react\";\nimport { capitalize } from \"../../utils/functions\";\n\nconst Checkbox = ({ name, data, setData }) => {\n    return (\n        <div className=\"form-group clearfix\">\n            <div className=\"icheck-primary d-inline\">\n                <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id={name}\n                    defaultValue\n                    checked={data}\n                    onChange={(e) => setData(e.target.checked)}\n                />\n                <label htmlFor={name}>{capitalize(name)}</label>\n            </div>\n        </div>\n    );\n};\n\nexport default Checkbox;\n","import React from \"react\";\n\nexport const BigSpin = () => (\n    <div className=\"text-center\">\n        <img src=\"/spin.svg\" alt=\"loader\" />\n    </div>\n);\n","import axios from \"../axios.conf\";\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n} from \"../constants/productConstants\";\n\n//get all products\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: PRODUCT_LIST_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //get all products\n        const { data } = await axios.get(\n            `api/products?keyword=${keyword}&pageNumber=${pageNumber}`,\n            config\n        );\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//create a product\nexport const createProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST,\n        });\n\n        //get product from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //create product\n        const { data } = await axios.post(\"/api/products\", product, config);\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get product details\nexport const listProductDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get product\n        const { data } = await axios.get(`/api/products/${id}`, config);\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a product\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update product\n        const { data } = await axios.put(\n            `api/products/${product.id}`,\n            product,\n            config\n        );\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete product\n        await axios.delete(`/api/products/${id}`, config);\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\nexport const PRODUCT_LIST_RESET = \"PRODUCT_LIST_RESET\";\n\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\nexport const PRODUCT_DETAILS_RESET = \"PRODUCT_DETAILS_RESET\";\n\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\nexport const PRODUCT_DELETE_RESET = \"PRODUCT_DELETE_RESET\";\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/* components */\nimport LoaderHandler from \"../loader/LoaderHandler\";\nimport Pagination from \"../Pagination\";\nimport Search from \"../Search\";\nimport { BigSpin } from \"../loader/SvgLoaders\";\n\n/* actions */\nimport { listProducts } from \"../../actions/productActions\";\n\nconst ProductsTable = ({\n    productsInOrder,\n    setProductsInOrder,\n    productsAlreadyOrdered,\n}) => {\n    //add product to order\n    const dispatch = useDispatch();\n    const [keyword, setKeyword] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(0);\n    const [products, setProducts] = useState([]);\n\n    const addProduct = (e, product) => {\n        e.preventDefault();\n\n        //product object\n        const productIn = {\n            id: product.id,\n            name: product.name,\n            price: product.price,\n            stock: product.stock,\n            quantity: 1,\n        };\n        //if is already in order\n        if (!inOrder(productIn, productsInOrder)) {\n            setProductsInOrder([...productsInOrder, productIn]);\n        } else {\n            alert(\"Product already in order\");\n        }\n    };\n\n    //product list state\n    const productList = useSelector((state) => state.productList);\n    const {\n        loading: loadingProductList,\n        error: errorProductList,\n        products: productsFromState,\n        page,\n        pages,\n    } = productList;\n\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber));\n    }, [keyword, pageNumber]);\n\n    useEffect(() => {\n        if (productsFromState) {\n            setProducts(mapProducts(productsFromState));\n        }\n    }, [productsFromState]);\n\n    //check if product is already in order\n    const inOrder = (obj, list) => {\n        for (let index = 0; index < list.length; index++) {\n            if (obj.id === list[index].id) {\n                return list[index];\n            }\n        }\n        return false;\n    };\n\n    //refresh products table\n    const refreshProducts = (e) => {\n        e.preventDefault();\n        dispatch(listProducts(keyword, pageNumber));\n    };\n\n    //check stock to show\n    const showStock = (product) => {\n        const productInOrder = productsInOrder.find(\n            (productIn) => productIn.id === product.id\n        );\n        if (productInOrder) return product.stock - productInOrder.quantity;\n        return product.stock;\n    };\n\n    const mapProducts = (productsToMap) => {\n        if (!productsAlreadyOrdered) return productsToMap;\n\n        const mappedProducts = productsToMap.map((item) => {\n            productsAlreadyOrdered.map((item2) => {\n                if (item.id === item2.id) {\n                    item.stock = item.stock + item2.quantity;\n                }\n            });\n            return item;\n        });\n        return mappedProducts;\n    };\n\n    const renderRefreshButton = () => (\n        <button className=\"btn btn-info float-right\" onClick={refreshProducts}>\n            <i className=\"fas fa-sync-alt\"></i>\n        </button>\n    );\n\n    const renderProducts = () => (\n        <table id=\"productsTable\" className=\"table table-bordered table-hover \">\n            <thead\n                style={{\n                    color: \"#fff\",\n                }}\n                className=\"bg-info\"\n            >\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Price</th>\n                    <th>Stock</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {products.map((product) => (\n                    <tr key={product.id}>\n                        <td>{product.id}</td>\n                        <td>{product.name}</td>\n                        <td>${product.price}</td>\n                        <td>{showStock(product)}</td>\n                        {inOrder(product, productsInOrder) ? (\n                            <td className=\"text-center\">\n                                <button disabled className=\"btn btn-primary\">\n                                    In Order\n                                </button>\n                            </td>\n                        ) : product.stock > 0 ? (\n                            <td className=\"text-center\">\n                                <button\n                                    className=\"btn btn-success\"\n                                    onClick={(e) => addProduct(e, product)}\n                                >\n                                    <i className=\"fas fa-plus\"></i>\n                                </button>\n                            </td>\n                        ) : (\n                            <td className=\"text-center\">\n                                <button disabled className=\"btn btn-danger\">\n                                    Out of Stock\n                                </button>\n                            </td>\n                        )}\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    return (\n        <>\n            {renderRefreshButton()}\n            <Search\n                keyword={keyword}\n                setKeyword={setKeyword}\n                setPage={setPageNumber}\n            />\n            <LoaderHandler\n                loading={loadingProductList}\n                error={errorProductList}\n                render={renderProducts}\n                loader={<BigSpin />}\n            />\n\n            <Pagination pages={pages} page={page} setPage={setPageNumber} />\n        </>\n    );\n};\n\nexport default ProductsTable;\n","import React, { useEffect } from \"react\";\n\nconst OrderInfo = ({ productsInOrder, total, setTotal }) => {\n    //get all order items\n    const totalItems = (productsIn) => {\n        return productsIn.reduce((acc, item) => acc + item.quantity, 0);\n    };\n\n    useEffect(() => {\n        setTotal(totalPrice(productsInOrder));\n    }, [productsInOrder]);\n\n    //get order total price\n    const totalPrice = (productsIn) => {\n        return productsIn\n            .reduce((acc, item) => acc + item.quantity * item.price, 0)\n            .toFixed(2);\n    };\n\n    return (\n        <div className=\"small-box bg-success\">\n            <div className=\"inner\">\n                <h3>TOTAL $ {total}</h3>\n                <p>\n                    {productsInOrder.length > 0\n                        ? totalItems(productsInOrder)\n                        : 0}{\" \"}\n                    Items in Order\n                </p>\n            </div>\n            <div className=\"icon\">\n                <i className=\"fas fa-shopping-cart\" />\n            </div>\n        </div>\n    );\n};\n\nexport default OrderInfo;\n","import React, { useState, useEffect } from \"react\";\nimport ReactSelect from \"react-select\";\n\nconst Select = ({ items, data, setData, disabled, search = () => {} }) => {\n    const [current, setCurrent] = useState(null);\n\n    useEffect(() => {\n        mapSelect().forEach((item) => {\n            if (item.value === data) {\n                setCurrent(item);\n            }\n        });\n    }, [items, data]);\n\n    const mapSelect = () => {\n        const mapped = items.map((item) => ({\n            label: item.name,\n            value: item.id,\n        }));\n        return mapped;\n    };\n\n    const handleChange = (element) => {\n        setCurrent(element);\n        setData(parseInt(element.value));\n    };\n\n    return (\n        <ReactSelect\n            options={mapSelect()}\n            onChange={handleChange}\n            value={current}\n            onKeyDown={search}\n            onFocus={search}\n            placeholder=\"Select value\"\n            isDisabled={disabled}\n            isSearchable\n        />\n    );\n};\n\nexport default Select;\n","import React from \"react\";\n\nconst OrderCart = ({ productsInOrder, setProductsInOrder }) => {\n    //remove product from order\n    const removeProduct = (e, product) => {\n        e.preventDefault();\n\n        //remove product\n        const productsIn = productsInOrder.filter(function (item) {\n            return item.id !== product.id;\n        });\n\n        setProductsInOrder(productsIn);\n    };\n\n    //increase product quantiity\n    const addUnit = (e, product) => {\n        e.preventDefault();\n\n        const newProducts = productsInOrder.map((el) =>\n            el.id === product.id ? { ...el, quantity: el.quantity + 1 } : el\n        );\n        setProductsInOrder(newProducts);\n    };\n\n    //decrease product quantity\n    const removeUnit = (e, product) => {\n        e.preventDefault();\n\n        const newProducts = productsInOrder.map((el) =>\n            el.id === product.id ? { ...el, quantity: el.quantity - 1 } : el\n        );\n        setProductsInOrder(newProducts);\n    };\n\n    const renderCart = () => (\n        <>\n            {productsInOrder.length > 0 &&\n                productsInOrder.map((productIn, i) => (\n                    <tr key={i}>\n                        <td>{productIn.name}</td>\n                        <td>{productIn.quantity}</td>\n                        <td className=\"d-flex justify-content-around\">\n                            <button\n                                disabled={productIn.quantity < 2}\n                                className=\"btn btn-danger\"\n                                onClick={(e) => removeUnit(e, productIn)}\n                            >\n                                -\n                            </button>\n                            <button\n                                disabled={productIn.quantity >= productIn.stock}\n                                className=\"btn btn-primary\"\n                                onClick={(e) => addUnit(e, productIn)}\n                            >\n                                +\n                            </button>\n                        </td>\n                        <td className=\"h6\">\n                            ${productIn.price * productIn.quantity}\n                        </td>\n                        <td>\n                            <button\n                                className=\"btn btn-danger\"\n                                onClick={(e) => removeProduct(e, productIn)}\n                            >\n                                X\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n        </>\n    );\n\n    return (\n        <>\n            <table\n                id=\"orderTable\"\n                className=\"table table-bordered table-hover text-center\"\n            >\n                <thead>\n                    <tr>\n                        <th className=\"d-none d-sm-table-cell\"></th>\n                        <th>Product</th>\n                        <th>Units</th>\n                        <th></th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>{renderCart()}</tbody>\n            </table>\n        </>\n    );\n};\n\nexport default OrderCart;\n","export const TABLE_ALL_REQUEST = \"TABLE_ALL_REQUEST\";\nexport const TABLE_ALL_SUCCESS = \"TABLE_ALL_SUCCESS\";\nexport const TABLE_ALL_FAIL = \"TABLE_ALL_FAIL\";\nexport const TABLE_ALL_RESET = \"TABLE_ALL_RESET\";\n\nexport const TABLE_LIST_REQUEST = \"TABLE_LIST_REQUEST\";\nexport const TABLE_LIST_SUCCESS = \"TABLE_LIST_SUCCESS\";\nexport const TABLE_LIST_FAIL = \"TABLE_LIST_FAIL\";\nexport const TABLE_LIST_RESET = \"TABLE_LIST_RESET\";\n\nexport const TABLE_CREATE_REQUEST = \"TABLE_CREATE_REQUEST\";\nexport const TABLE_CREATE_SUCCESS = \"TABLE_CREATE_SUCCESS\";\nexport const TABLE_CREATE_FAIL = \"TABLE_CREATE_FAIL\";\n\nexport const TABLE_DETAILS_REQUEST = \"TABLE_DETAILS_REQUEST\";\nexport const TABLE_DETAILS_SUCCESS = \"TABLE_DETAILS_SUCCESS\";\nexport const TABLE_DETAILS_FAIL = \"TABLE_DETAILS_FAIL\";\nexport const TABLE_DETAILS_RESET = \"TABLE_DETAILS_RESET\";\n\nexport const TABLE_UPDATE_REQUEST = \"TABLE_UPDATE_REQUEST\";\nexport const TABLE_UPDATE_SUCCESS = \"TABLE_UPDATE_SUCCESS\";\nexport const TABLE_UPDATE_FAIL = \"TABLE_UPDATE_FAIL\";\nexport const TABLE_UPDATE_RESET = \"TABLE_UPDATE_RESET\";\n\nexport const TABLE_DELETE_REQUEST = \"TABLE_DELETE_REQUEST\";\nexport const TABLE_DELETE_SUCCESS = \"TABLE_DELETE_SUCCESS\";\nexport const TABLE_DELETE_FAIL = \"TABLE_DELETE_FAIL\";\nexport const TABLE_DELETE_RESET = \"TABLE_DELETE_RESET\";\n","import axios from \"../axios.conf\";\nimport {\n    TABLE_LIST_REQUEST,\n    TABLE_LIST_SUCCESS,\n    TABLE_LIST_FAIL,\n    TABLE_CREATE_REQUEST,\n    TABLE_CREATE_SUCCESS,\n    TABLE_CREATE_FAIL,\n    TABLE_DETAILS_REQUEST,\n    TABLE_DETAILS_SUCCESS,\n    TABLE_DETAILS_FAIL,\n    TABLE_UPDATE_REQUEST,\n    TABLE_UPDATE_SUCCESS,\n    TABLE_UPDATE_FAIL,\n    TABLE_DELETE_REQUEST,\n    TABLE_DELETE_SUCCESS,\n    TABLE_DELETE_FAIL,\n    TABLE_ALL_REQUEST,\n    TABLE_ALL_SUCCESS,\n    TABLE_ALL_FAIL,\n} from \"../constants/tableConstants\";\n\n//get all tables\nexport const allTables = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TABLE_ALL_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //if tables available is needed\n        const { data } = await axios.get(`/api/tables/all`, config);\n\n        dispatch({\n            type: TABLE_ALL_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: TABLE_ALL_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get all tables with pagination\nexport const listTables = (keyword = \"\", pageNumber = \"\") => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: TABLE_LIST_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //get all tables\n        const { data } = await axios.get(\n            `api/tables?keyword=${keyword}&pageNumber=${pageNumber}`,\n            config\n        );\n\n        dispatch({\n            type: TABLE_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: TABLE_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//create a table\nexport const createTable = (table) => async (dispatch, getState) => {\n    const { name } = table;\n\n    try {\n        dispatch({\n            type: TABLE_CREATE_REQUEST,\n        });\n\n        //get table from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //create table\n        const { data } = await axios.post(\"/api/tables\", { name }, config);\n        dispatch({\n            type: TABLE_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: TABLE_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get table details\nexport const listTableDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: TABLE_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get table\n        const { data } = await axios.get(`/api/tables/${id}`, config);\n        dispatch({\n            type: TABLE_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: TABLE_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a table\nexport const updateTable = (table) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TABLE_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update table\n        const { data } = await axios.put(\n            `api/tables/${table.id}`,\n            table,\n            config\n        );\n        dispatch({\n            type: TABLE_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: TABLE_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete table\nexport const deleteTable = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TABLE_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete table\n        await axios.delete(`/api/tables/${id}`, config);\n        dispatch({\n            type: TABLE_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: TABLE_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import axios from \"../axios.conf\";\nimport {\n    CLIENT_LIST_REQUEST,\n    CLIENT_LIST_SUCCESS,\n    CLIENT_LIST_FAIL,\n    CLIENT_CREATE_REQUEST,\n    CLIENT_CREATE_SUCCESS,\n    CLIENT_CREATE_FAIL,\n    CLIENT_DETAILS_REQUEST,\n    CLIENT_DETAILS_SUCCESS,\n    CLIENT_DETAILS_FAIL,\n    CLIENT_UPDATE_REQUEST,\n    CLIENT_UPDATE_SUCCESS,\n    CLIENT_UPDATE_FAIL,\n    CLIENT_DELETE_REQUEST,\n    CLIENT_DELETE_SUCCESS,\n    CLIENT_DELETE_FAIL,\n} from \"../constants/clientConstants\";\n\n//get all clients with pagination\nexport const listClients =\n    (keyword = \"\", pageNumber = \"\") =>\n    async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: CLIENT_LIST_REQUEST,\n            });\n\n            //get user from state\n            const {\n                userLogin: { userInfo },\n            } = getState();\n\n            //headers\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            };\n\n            //get all clients\n            const { data } = await axios.get(\n                `api/clients?keyword=${keyword}&pageNumber=${pageNumber}`,\n                config\n            );\n\n            dispatch({\n                type: CLIENT_LIST_SUCCESS,\n                payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: CLIENT_LIST_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            });\n        }\n    };\n\n//create a client\nexport const createClient = (client) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CLIENT_CREATE_REQUEST,\n        });\n\n        //get client from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //create client\n        const { data } = await axios.post(\"/api/clients\", client, config);\n        dispatch({\n            type: CLIENT_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CLIENT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get client details\nexport const listClientDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CLIENT_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get CLIENT\n        const { data } = await axios.get(`/api/clients/${id}`, config);\n        dispatch({\n            type: CLIENT_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CLIENT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a client\nexport const updateClient = (client) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CLIENT_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update client\n        const { data } = await axios.put(\n            `api/clients/${client.id}`,\n            client,\n            config\n        );\n        dispatch({\n            type: CLIENT_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CLIENT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete client\nexport const deleteClient = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CLIENT_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete client\n        await axios.delete(`/api/clients/${id}`, config);\n        dispatch({\n            type: CLIENT_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: CLIENT_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","export const CLIENT_LIST_REQUEST = \"CLIENT_LIST_REQUEST\";\nexport const CLIENT_LIST_SUCCESS = \"CLIENT_LIST_SUCCESS\";\nexport const CLIENT_LIST_FAIL = \"CLIENT_LIST_FAIL\";\nexport const CLIENT_LIST_RESET = \"CLIENT_LIST_RESET\";\n\nexport const CLIENT_CREATE_REQUEST = \"CLIENT_CREATE_REQUEST\";\nexport const CLIENT_CREATE_SUCCESS = \"CLIENT_CREATE_SUCCESS\";\nexport const CLIENT_CREATE_FAIL = \"CLIENT_CREATE_FAIL\";\n\nexport const CLIENT_DETAILS_REQUEST = \"CLIENT_DETAILS_REQUEST\";\nexport const CLIENT_DETAILS_SUCCESS = \"CLIENT_DETAILS_SUCCESS\";\nexport const CLIENT_DETAILS_FAIL = \"CLIENT_DETAILS_FAIL\";\nexport const CLIENT_DETAILS_RESET = \"CLIENT_DETAILS_RESET\";\n\nexport const CLIENT_UPDATE_REQUEST = \"CLIENT_UPDATE_REQUEST\";\nexport const CLIENT_UPDATE_SUCCESS = \"CLIENT_UPDATE_SUCCESS\";\nexport const CLIENT_UPDATE_FAIL = \"CLIENT_UPDATE_FAIL\";\nexport const CLIENT_UPDATE_RESET = \"CLIENT_UPDATE_RESET\";\n\nexport const CLIENT_DELETE_REQUEST = \"CLIENT_DELETE_REQUEST\";\nexport const CLIENT_DELETE_SUCCESS = \"CLIENT_DELETE_SUCCESS\";\nexport const CLIENT_DELETE_FAIL = \"CLIENT_DELETE_FAIL\";\nexport const CLIENT_DELETE_RESET = \"CLIENT_DELETE_RESET\";\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\n\n/* Form components */\nimport Textarea from \"../../components/form/Textarea\";\nimport Checkbox from \"../../components/form/Checkbox\";\n\n/* Order components */\nimport ProductsTable from \"../../components/order/ProductsTable\";\nimport OrderInfo from \"../../components/order/OrderInfo\";\nimport Select from \"../../components/Select\";\nimport OrderCart from \"../../components/order/OrderCart\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Constants */\n\nimport { PRODUCT_LIST_RESET } from \"../../constants/productConstants\";\nimport { ORDER_CREATE_RESET } from \"../../constants/orderConstants\";\n\n/* Actions */\nimport { listTables } from \"../../actions/tableActions\";\nimport { listClients } from \"../../actions/clientActions\";\nimport { createOrder } from \"../../actions/orderActions\";\n\nconst OrderCreateScreen = ({ history, match }) => {\n    /* Get table from url */\n    const tableFromUrl = window.location.href.indexOf(\"table\") !== -1;\n    /* Get delivery from url */\n    const deliveryFromUrl = window.location.href.indexOf(\"delivery\") !== -1;\n\n    const [table, setTable] = useState(\n        tableFromUrl ? parseInt(match.params.id) : null\n    );\n    const [client, setClient] = useState(null);\n    const [delivery, setDelivery] = useState(deliveryFromUrl);\n    const [note, setNote] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const [total, setTotal] = useState(0);\n    const [productsInOrder, setProductsInOrder] = useState([]);\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const clientList = useSelector((state) => state.clientList);\n    const { clients } = clientList;\n\n    const tableList = useSelector((state) => state.tableList);\n    const { tables } = tableList;\n\n    //order create state\n    const orderCreate = useSelector((state) => state.orderCreate);\n    const { success, loading, error } = orderCreate;\n\n    useEffect(() => {\n        if (success) {\n            dispatch({ type: PRODUCT_LIST_RESET });\n            dispatch({ type: ORDER_CREATE_RESET });\n            if (delivery) {\n                history.push(\"/delivery\");\n            } else {\n                history.push(\"/active\");\n            }\n        }\n    }, [dispatch, history, success, error]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        /* Set Errors */\n        let errorsCheck = {};\n        if (!table && !delivery) {\n            errorsCheck.table = \"Table is required\";\n        }\n        if (!client) {\n            errorsCheck.client = \"Client is required\";\n        }\n\n        if (productsInOrder.length < 1) {\n            errorsCheck.products = \"Cart cannot by empty\";\n        }\n\n        /* Check errors */\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            /* Create order */\n            const order = {\n                total: total,\n                tableId: !delivery ? table : 0,\n                clientId: client,\n                products: productsInOrder,\n                delivery: delivery,\n                note: note,\n            };\n            /* Make request */\n            dispatch(createOrder(order));\n        }\n    };\n\n    /* Filter tables */\n    const filterFreeTables = () => {\n        const mappedTables = tables.filter((table) => {\n            return table.occupied === false;\n        });\n        return mappedTables;\n    };\n\n    const renderProductsTable = () => (\n        <ProductsTable\n            productsInOrder={productsInOrder}\n            setProductsInOrder={setProductsInOrder}\n        />\n    );\n\n    const renderCart = () => (\n        <>\n            {errors.products && (\n                <Message message={errors.products} color={\"warning\"} />\n            )}\n            <OrderInfo\n                total={total}\n                setTotal={setTotal}\n                productsInOrder={productsInOrder}\n            />\n            <OrderCart\n                productsInOrder={productsInOrder}\n                setProductsInOrder={setProductsInOrder}\n            />\n        </>\n    );\n\n    const searchTables = (e) => {\n        dispatch(listTables(e.target.value));\n    };\n\n    const renderTablesSelect = () => (\n        <>\n            <Select\n                data={table}\n                setData={setTable}\n                items={filterFreeTables(tables)}\n                disabled={delivery}\n                search={searchTables}\n            />\n            {errors.table && (\n                <Message message={errors.table} color={\"warning\"} />\n            )}\n        </>\n    );\n\n    const searchClients = (e) => {\n        dispatch(listClients(e.target.value));\n    };\n\n    const renderClientsSelect = () => (\n        <>\n            <Select\n                data={client}\n                setData={setClient}\n                items={clients}\n                search={searchClients}\n            />\n            {errors.client && (\n                <Message message={errors.client} color={\"warning\"} />\n            )}\n        </>\n    );\n\n    const renderDeliveryCheckbox = () => (\n        <Checkbox name={\"delivery\"} data={delivery} setData={setDelivery} />\n    );\n\n    const renderNoteTextarea = () => (\n        <Textarea\n            title={\"Note (optional)\"}\n            rows={3}\n            data={note}\n            setData={setNote}\n        />\n    );\n\n    const renderSubmitButton = () => (\n        <button\n            onClick={handleSubmit}\n            className=\"btn btn-success btn-lg float-right \"\n        >\n            Submit\n        </button>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Orders\"} />\n\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Create Order</h3>\n                                    <Loader variable={loading} />\n                                    <Message message={error} color={\"danger\"} />\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 col-lg-6\">\n                                            {renderProductsTable()}\n                                        </div>\n                                        <div className=\"col-12 col-lg-6\">\n                                            {renderCart()}\n                                            <div className=\"row\">\n                                                <div className=\"col-12 col-md-6\">\n                                                    {renderTablesSelect()}\n                                                </div>\n                                                <div className=\"col-12 col-md-6\">\n                                                    {renderClientsSelect()}\n                                                </div>\n                                            </div>\n                                            <div className=\"mt-4\">\n                                                {renderDeliveryCheckbox()}\n                                            </div>\n                                            {renderNoteTextarea()}\n                                        </div>\n                                    </div>\n                                    {renderSubmitButton()}\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default OrderCreateScreen;\n","import React from 'react';\n\nconst ViewBox = ({title,paragraph,icon,color}) => {\n    return ( \n    \n            <div className={`small-box ${color}`}>\n                <div className=\"inner\">\n                <h3>{title}</h3>\n                <p>{paragraph} </p>\n                </div>\n                <div className=\"icon\">\n                <i className={icon}></i>\n                </div>\n            </div>\n\n     );\n}\n \nexport default ViewBox;","import React from 'react';\n\nconst ModalButton = ({modal, setModal, classes}) => {\n    return ( \n        <>\n            <button \n                className={`btn ${classes}`}\n                onClick={() => setModal(!modal)}\n              >\n              {modal ? 'Close' : 'Create'}\n            </button>\n        </>\n     );\n}\n \nexport default ModalButton;","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"react-modal\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\nimport ViewBox from \"../../components/ViewBox\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport ModalButton from \"../../components/ModalButton\";\nimport { BigSpin } from \"../../components/loader/SvgLoaders\";\n\n/* constants */\nimport { ORDER_UPDATE_RESET } from \"../../constants/orderConstants\";\n\n/* actions */\nimport {\n    listOrderDetails,\n    updateOrderToPaid,\n} from \"../../actions/orderActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nconst OrderViewScreen = ({ history, match }) => {\n    const orderId = parseInt(match.params.id);\n\n    const dispatch = useDispatch();\n\n    const [modal, setModal] = useState(false);\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //order details state\n    const orderDetails = useSelector((state) => state.orderDetails);\n    const { loading, error, order } = orderDetails;\n\n    //order edit state\n    const orderUpdate = useSelector((state) => state.orderUpdate);\n    const {\n        loading: loadingUpdate,\n        success: successUpdate,\n        errorUpdate,\n    } = orderUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: ORDER_UPDATE_RESET });\n            if (order.delivery) {\n                history.push(\"/delivery\");\n            } else {\n                history.push(\"/active\");\n            }\n        }\n        if (order) {\n            if (!order.id || order.id !== orderId) {\n                dispatch(listOrderDetails(orderId));\n            }\n        }\n    }, [dispatch, history, order, orderId, successUpdate]);\n\n    const renderModalPay = () => (\n        <Modal\n            style={modalStyles}\n            isOpen={modal}\n            onRequestClose={() => setModal(false)}\n        >\n            <h2 className=\"text-center\">Order Payment</h2>\n            <p className=\"text-center\">Is order already paid?.</p>\n            <form onSubmit={handlePay}>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Yes, close order.\n                </button>\n\n                <ModalButton\n                    modal={modal}\n                    setModal={setModal}\n                    classes={\"btn-danger float-right\"}\n                />\n            </form>\n        </Modal>\n    );\n\n    const handlePay = async (e) => {\n        e.preventDefault();\n        const updatedOrder = {\n            id: orderId,\n        };\n        setModal(false);\n        dispatch(updateOrderToPaid(updatedOrder));\n    };\n\n    const handleEdit = (e) => {\n        e.preventDefault();\n        history.push(`/order/${orderId}/edit`);\n    };\n\n    //get all order items\n    const totalItems = (productsIn) => {\n        return productsIn.reduce(\n            (acc, item) => acc + item.OrderProduct.quantity,\n            0\n        );\n    };\n\n    const renderCartInfo = () =>\n        order &&\n        order.products && (\n            <div className=\"small-box bg-info\">\n                <div className=\"inner\">\n                    <h3>TOTAL ${order.total}</h3>\n                    <p>\n                        {order.products.length > 0\n                            ? totalItems(order.products)\n                            : 0}{\" \"}\n                        Items in Order\n                    </p>\n                </div>\n                <div className=\"icon\">\n                    <i className=\"fas fa-shopping-cart\" />\n                </div>\n            </div>\n        );\n\n    const renderOrderProducts = () => (\n        <table\n            id=\"orderTable\"\n            className=\"table table-bordered table-hover table-striped text-center table-overflow\"\n        >\n            <thead>\n                <tr>\n                    <th>Product</th>\n                    <th>Quantity</th>\n                    <th>Price</th>\n                    <th>Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                {order &&\n                    order.products &&\n                    order.products.length > 0 &&\n                    order.products.map((product) => (\n                        <tr key={product.id}>\n                            <td>{product.name}</td>\n                            <td className=\"text-center h4\">\n                                <span className=\"badge bg-primary\">\n                                    {product.OrderProduct.quantity}\n                                </span>\n                            </td>\n                            <td className=\"text-center h4\">\n                                <span className=\"badge bg-info\">\n                                    ${product.price}\n                                </span>\n                            </td>\n                            <td className=\"text-center h4\">\n                                <span className={\"badge bg-success\"}>\n                                    $\n                                    {product.price *\n                                        product.OrderProduct.quantity}{\" \"}\n                                </span>\n                            </td>\n                        </tr>\n                    ))}\n            </tbody>\n        </table>\n    );\n\n    const renderOrderInfo = () =>\n        order && (\n            <>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <ViewBox\n                            title={order.id}\n                            paragraph={\"ORDER ID\"}\n                            icon={\"far fa-clipboard\"}\n                            color={\"bg-info\"}\n                        />\n                    </div>\n\n                    {order.isPaid ? (\n                        <div className=\"col-12 col-md-6\">\n                            <ViewBox\n                                title={\"Paid\"}\n                                paragraph={\"Order is already paid\"}\n                                icon={\"fas fa-check\"}\n                                color={\"bg-success\"}\n                            />\n                        </div>\n                    ) : (\n                        <div className=\"col-12 col-md-6\">\n                            <ViewBox\n                                title={\"Not Paid\"}\n                                paragraph={\"Order is still not paid\"}\n                                icon={\"far fa-times-circle\"}\n                                color={\"bg-danger\"}\n                            />\n                        </div>\n                    )}\n\n                    <div className=\"col-12 col-md-6\">\n                        {order.client && (\n                            <ViewBox\n                                title={order.client.name}\n                                paragraph={`ID: ${order.client.id}`}\n                                icon={\"fas fa-user\"}\n                                color={\"bg-info\"}\n                            />\n                        )}\n                    </div>\n\n                    {order.table ? (\n                        <div className=\"col-12 col-md-6\">\n                            <ViewBox\n                                title={order.table.name}\n                                paragraph={`ID: ${order.table.id}`}\n                                icon={\"fas fa-utensils\"}\n                                color={\"bg-info\"}\n                            />\n                        </div>\n                    ) : (\n                        <div className=\"col-12 col-md-6\">\n                            {order.client && (\n                                <ViewBox\n                                    title={\"Delivery\"}\n                                    paragraph={order.client.address}\n                                    icon={\"fas fa-truck\"}\n                                    color={\"bg-primary\"}\n                                />\n                            )}\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"col-12\">\n                    <ViewBox\n                        title={\"Note:\"}\n                        paragraph={order.note}\n                        icon={\"far fa-sticky-note\"}\n                        color={\"bg-silver\"}\n                    />\n                </div>\n            </>\n        );\n\n    const renderOrderEdit = () => (\n        <div className=\"card\">\n            <div className=\"card-header bg-warning\">Edit Order</div>\n            <div className=\"card-body\">\n                <button className=\"btn btn-block\" onClick={handleEdit}>\n                    <ViewBox\n                        title={`Edit Order`}\n                        paragraph={`Click to Edit`}\n                        icon={\"fas fa-edit\"}\n                        color={\"bg-warning\"}\n                    />\n                </button>\n            </div>\n        </div>\n    );\n\n    const renderOrderPay = () => (\n        <div className=\"card\">\n            <div className=\"card-header bg-success\">Update to Paid</div>\n            <div className=\"card-body\">\n                <button\n                    className=\"btn btn-block\"\n                    onClick={() => setModal(true)}\n                >\n                    <ViewBox\n                        title={`PAY $${order.total}`}\n                        paragraph={`Click to Pay`}\n                        icon={\"fas fa-hand-holding-usd\"}\n                        color={\"bg-success\"}\n                    />\n                </button>\n            </div>\n        </div>\n    );\n\n    const renderInfo = () => (\n        <>\n            <div className=\"col-12 col-md-6\">\n                {renderCartInfo()}\n                {renderOrderProducts()}\n            </div>\n\n            <div className=\"col-12 col-md-6\">{renderOrderInfo()}</div>\n        </>\n    );\n\n    const renderOrderButton = () => (\n        <div className=\"col-12 col-md-3\">\n            {order && !order.isPaid && renderOrderEdit()}\n        </div>\n    );\n\n    const renderPayButton = () => (\n        <div className=\"col-12 col-md-3\">\n            {order && !order.isPaid && renderOrderPay()}\n        </div>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Orders\"} />\n            <LoaderHandler loading={loadingUpdate} error={errorUpdate} />\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {renderModalPay()}\n                        <div className=\"col-12\">\n                            <ButtonGoBack history={history} />\n\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">View Order</h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <div className=\"row d-flex justify-content-center\">\n                                        <LoaderHandler\n                                            loading={loading}\n                                            error={error}\n                                            render={renderInfo}\n                                            loader={<BigSpin />}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                    <div className=\"row d-flex justify-content-between\">\n                        <LoaderHandler\n                            loading={loading}\n                            error={error}\n                            render={renderOrderButton}\n                            loader={<BigSpin />}\n                        />\n                        <LoaderHandler\n                            loading={loading}\n                            error={error}\n                            render={renderPayButton}\n                            loader={<BigSpin />}\n                        />\n                    </div>\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default OrderViewScreen;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Table = ({ table }) => {\n    return (\n        <Link\n            to={\n                table.orders[0]\n                    ? `/order/${table.orders[0].id}/view`\n                    : \"/active\"\n            }\n        >\n            <div className=\"small-box bg-danger\">\n                <div className=\"inner\">\n                    <h3>{table.name}</h3>\n                    <p>\n                        Orders ID:{\" \"}\n                        {table.orders.map((order) => {\n                            return order.id;\n                        })}\n                    </p>\n                </div>\n                <div className=\"icon\">\n                    <i className=\"fas fa-user-friends\"></i>\n                </div>\n                <div className=\"small-box-footer\">\n                    More info <i className=\"fa fa-arrow-circle-right\" />\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default Table;\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport DataTableLoader from \"./DataTableLoader\";\n\nexport const OccupiedTableLoader = (props) => (\n    <ContentLoader\n        speed={2}\n        viewBox=\"0 0 400 200\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n        style={{ width: \"100%\" }}\n        {...props}\n    >\n        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"400\" height=\"160\" />\n    </ContentLoader>\n);\n\nexport const FreeTableLoader = (props) => (\n    <ContentLoader\n        speed={2}\n        style={{ width: \"100%\", height: \"60px\" }}\n        viewBox=\"0 0 200 40\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n        {...props}\n    >\n        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"100%\" />\n    </ContentLoader>\n);\n\nexport const SkeletonBoxes = () => {\n    let tableSkeleton = [];\n    for (let i = 0; i < 4; i++) {\n        tableSkeleton.push(\n            <div className=\"col-lg-3 col-6\" key={i}>\n                <OccupiedTableLoader />{\" \"}\n            </div>\n        );\n    }\n    return tableSkeleton;\n};\n\nexport const SkeletonSales = () => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-12 col-lg-6\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <DataTableLoader />\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-12 col-lg-6\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <DataTableLoader />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* components */\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Table from \"../../components/Table\";\nimport {\n    OccupiedTableLoader,\n    FreeTableLoader,\n} from \"../../components/loader/SkeletonLoaders\";\n\n/* actions */\nimport { allTables } from \"../../actions/tableActions\";\n\nconst ActiveOrdersScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const tableAll = useSelector((state) => state.tableAll);\n    const { loading, error, tables } = tableAll;\n\n    useEffect(() => {\n        dispatch(allTables());\n    }, [dispatch, history, userInfo]);\n\n    const occupiedTableLoader = () => {\n        let tableSkeleton = [];\n        for (let i = 0; i < 16; i++) {\n            tableSkeleton.push(\n                <div className=\"col-12 col-md-6 col-lg-4 col-xl-3\" key={i}>\n                    {\" \"}\n                    <OccupiedTableLoader />{\" \"}\n                </div>\n            );\n        }\n        return tableSkeleton;\n    };\n\n    const freeTableLoader = () => {\n        let tableSkeleton = [];\n        for (let i = 0; i < 6; i++) {\n            tableSkeleton.push(\n                <div className=\"col-12\" key={i}>\n                    {\" \"}\n                    <FreeTableLoader />{\" \"}\n                </div>\n            );\n        }\n        return tableSkeleton;\n    };\n\n    const filterTablesByState = (isOccupied) => {\n        const mappedTables = tables.filter((table) => {\n            return table.occupied === isOccupied;\n        });\n        return mappedTables;\n    };\n\n    const renderOccupiedTables = () =>\n        filterTablesByState(true).map((table) => (\n            <div key={table.id} className=\"col-12 col-md-6 col-lg-4 col-xl-3\">\n                <Table table={table} />\n            </div>\n        ));\n\n    const renderFreeTables = () =>\n        filterTablesByState(false).map((table) => (\n            <Link\n                to={`/order/create/${table.id}/table`}\n                key={table.id}\n                className=\"btn btn-block btn-success btn-lg\"\n            >\n                <p className=\"text-center my-0\">\n                    <i className=\"fas fa-utensils float-left my-1\"></i>\n                    {table.name}\n                </p>\n            </Link>\n        ));\n\n    return (\n        <>\n            <HeaderContent name={\"Tables\"} />\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-9 col-lg-9\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">\n                                        Occupied Tables\n                                    </h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <LoaderHandler\n                                            loading={loading}\n                                            error={error}\n                                            loader={occupiedTableLoader()}\n                                            render={renderOccupiedTables}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                        <div className=\"col-12 col-md-3 col-lg-3\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">Free Tables</div>\n                                <div className=\"card-body\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={freeTableLoader()}\n                                        render={renderFreeTables}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ActiveOrdersScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\n\n/* Form components */\nimport Textarea from \"../../components/form/Textarea\";\nimport Checkbox from \"../../components/form/Checkbox\";\n\n/* Order Components */\nimport ProductsTable from \"../../components/order/ProductsTable\";\nimport OrderInfo from \"../../components/order/OrderInfo\";\nimport Select from \"../../components/Select\";\nimport OrderCart from \"../../components/order/OrderCart\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Constants */\nimport {\n    ORDER_DETAILS_RESET,\n    ORDER_UPDATE_RESET,\n} from \"../../constants/orderConstants\";\n\n/* Actions */\nimport { listOrderDetails, updateOrder } from \"../../actions/orderActions\";\nimport { listClients } from \"../../actions/clientActions\";\nimport { listTables } from \"../../actions/tableActions\";\n\nconst OrderEditScreen = ({ history, match }) => {\n    const orderId = parseInt(match.params.id);\n\n    const [table, setTable] = useState(null);\n    const [total, setTotal] = useState(0);\n    const [client, setClient] = useState(null);\n    const [delivery, setDelivery] = useState(false);\n    const [note, setNote] = useState(\"\");\n    const [productsInOrder, setProductsInOrder] = useState([]);\n    const [productsAlreadyOrdered, setProductsAlreadyOrdered] = useState([]);\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //order details state\n    const orderDetails = useSelector((state) => state.orderDetails);\n    const { loading, error, order } = orderDetails;\n\n    const clientList = useSelector((state) => state.clientList);\n    const { clients } = clientList;\n\n    const tableList = useSelector((state) => state.tableList);\n    const { tables } = tableList;\n\n    //order edit state\n    const orderUpdate = useSelector((state) => state.orderUpdate);\n    const {\n        loading: loadingUpdate,\n        success: successUpdate,\n        errorUpdate,\n    } = orderUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: ORDER_UPDATE_RESET });\n            dispatch({ type: ORDER_DETAILS_RESET });\n            if (delivery) {\n                history.push(\"/delivery\");\n            } else {\n                history.push(\"/active\");\n            }\n        }\n    }, [successUpdate]);\n\n    useEffect(() => {\n        //load order\n        if (order) {\n            if (!order.id || order.id !== orderId) {\n                dispatch(listOrderDetails(orderId));\n            } else {\n                //set states\n                setTable(order.table ? order.table.id : null);\n                setClient(order.client ? order.client.id : null);\n                setNote(order.note ? order.note : note);\n                setDelivery(order.delivery ? order.delivery : delivery);\n\n                if (order.products) {\n                    /* Format products */\n                    const products = order.products.map((product) => {\n                        return {\n                            ...product,\n                            quantity: product.OrderProduct.quantity,\n                        };\n                    });\n\n                    /* Set products state */\n                    setProductsInOrder(products);\n                    setProductsAlreadyOrdered(products);\n                }\n            }\n        }\n    }, [dispatch, history, order, orderId]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let errorsCheck = {};\n\n        if (!table && !delivery) {\n            errorsCheck.table = \"Table is required\";\n        }\n        if (!client) {\n            errorsCheck.client = \"Client is required\";\n        }\n\n        if (productsInOrder.length < 1) {\n            errorsCheck.products = \"Cart cannot by empty\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const order = {\n                id: orderId,\n                total: total,\n                tableId: !delivery ? table : null,\n                clientId: client,\n                products: productsInOrder,\n                delivery: delivery,\n                note: note,\n            };\n\n            dispatch(updateOrder(order));\n        }\n    };\n\n    const filterFreeTables = () => {\n        const mappedTables = tables.filter((tableItem) => {\n            /* return if table is not occupied OR if the same from order */\n            return tableItem.occupied === false || tableItem.id === table;\n        });\n        return mappedTables;\n    };\n\n    const renderProductsTable = () => (\n        <ProductsTable\n            productsInOrder={productsInOrder}\n            productsAlreadyOrdered={productsAlreadyOrdered}\n            setProductsInOrder={setProductsInOrder}\n        />\n    );\n\n    const renderCart = () => (\n        <>\n            {errors.products && (\n                <Message message={errors.products} color={\"warning\"} />\n            )}\n            <OrderInfo\n                total={total}\n                setTotal={setTotal}\n                productsInOrder={productsInOrder}\n            />\n            <OrderCart\n                productsInOrder={productsInOrder}\n                setProductsInOrder={setProductsInOrder}\n            />\n        </>\n    );\n\n    const searchTables = (e) => {\n        dispatch(listTables(e.target.value));\n    };\n\n    const renderTablesSelect = () => (\n        <>\n            <Select\n                data={table}\n                setData={setTable}\n                items={filterFreeTables(tables)}\n                disabled={delivery}\n                search={searchTables}\n            />\n            {errors.table && (\n                <Message message={errors.table} color={\"warning\"} />\n            )}\n        </>\n    );\n\n    const searchClients = (e) => {\n        dispatch(listClients(e.target.value));\n    };\n\n    const renderClientsSelect = () => (\n        <>\n            <Select\n                data={client}\n                setData={setClient}\n                items={clients}\n                search={searchClients}\n            />\n            {errors.client && (\n                <Message message={errors.client} color={\"warning\"} />\n            )}\n        </>\n    );\n\n    const renderDeliveryCheckbox = () => (\n        <Checkbox name={\"delivery\"} data={delivery} setData={setDelivery} />\n    );\n\n    const renderNoteTextarea = () => (\n        <Textarea\n            title={\"Note (optional)\"}\n            rows={3}\n            data={note}\n            setData={setNote}\n        />\n    );\n\n    const renderSubmitButton = () => (\n        <button\n            onClick={handleSubmit}\n            className=\"btn btn-success btn-lg float-right \"\n        >\n            Submit\n        </button>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Orders\"} />\n\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Create Order</h3>\n                                    <Loader variable={loadingUpdate} />\n                                    <Message\n                                        message={errorUpdate}\n                                        color={\"danger\"}\n                                    />\n                                    <Loader variable={loading} />\n                                    <Message message={error} color={\"danger\"} />\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 col-lg-6\">\n                                            {renderProductsTable()}\n                                        </div>\n                                        <div className=\"col-12 col-lg-6\">\n                                            {renderCart()}\n                                            <div className=\"row\">\n                                                <div className=\"col-12 col-md-6\">\n                                                    {renderTablesSelect()}\n                                                </div>\n                                                <div className=\"col-12 col-md-6\">\n                                                    {renderClientsSelect()}\n                                                </div>\n                                            </div>\n                                            <div className=\"mt-4\">\n                                                {renderDeliveryCheckbox()}\n                                            </div>\n                                            {renderNoteTextarea()}\n                                        </div>\n                                    </div>\n                                    {renderSubmitButton()}\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default OrderEditScreen;\n","import React from \"react\";\nimport { capitalize } from \"../../utils/functions\";\n\nconst Input = ({ name, type, data, setData, errors, classes = \"\" }) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{capitalize(name)}</label>\n            <input\n                type={type}\n                className={`form-control ${classes}`}\n                id={name}\n                aria-describedby={name}\n                value={data}\n                onChange={(e) => setData(e.target.value)}\n            />\n\n            {errors[name] && (\n                <label className=\"text-danger\">{errors[name]} </label>\n            )}\n        </div>\n    );\n};\n\nexport default Input;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Modal from \"react-modal\";\nimport Input from \"../../components/form/Input\";\nimport ModalButton from \"../../components/ModalButton\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport Search from \"../../components/Search\";\nimport Pagination from \"../../components/Pagination\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Actions */\nimport { listTables } from \"../../actions/tableActions\";\nimport { createTable } from \"../../actions/tableActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nModal.setAppElement(\"#root\");\n\nconst TableScreen = ({ history }) => {\n    const [name, setName] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const [keyword, setKeyword] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(1);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const tableList = useSelector((state) => state.tableList);\n    const { loading, error, tables, page, pages } = tableList;\n\n    const tableCreate = useSelector((state) => state.tableCreate);\n    const {\n        loading: createLoading,\n        success: createSuccess,\n        error: createError,\n    } = tableCreate;\n\n    useEffect(() => {\n        dispatch(listTables(keyword, pageNumber));\n        if (createSuccess) {\n            setName(\"\");\n            setModalIsOpen(false);\n        }\n    }, [dispatch, history, userInfo, pageNumber, keyword, createSuccess]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const table = {\n                name: name,\n            };\n\n            dispatch(createTable(table));\n        }\n    };\n\n    const renderTable = () => {\n        return (\n            <table className=\"table table-hover text-nowrap\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Occupied</th>\n                        <th className=\"d-none d-sm-table-cell\">Created At</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tables.map((table) => (\n                        <tr key={table.id}>\n                            <td>{table.id}</td>\n                            <td>{table.name}</td>\n                            <td>\n                                {table.occupied ? (\n                                    <h4 className=\"text-success\">\n                                        <i className=\"fas fa-check\"></i>\n                                    </h4>\n                                ) : (\n                                    <h4 className=\"text-danger\">\n                                        <i className=\"far fa-times-circle\"></i>\n                                    </h4>\n                                )}\n                            </td>\n                            <td className=\"d-none d-sm-table-cell\">\n                                {table.createdAt.slice(0, 10)}\n                            </td>\n                            <td>\n                                <Link\n                                    to={`/table/${table.id}/edit`}\n                                    className=\"btn btn-warning btn-lg\"\n                                >\n                                    Edit\n                                </Link>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        );\n    };\n\n    const renderModalCreateTable = () => (\n        <>\n            <ModalButton\n                modal={modalIsOpen}\n                setModal={setModalIsOpen}\n                classes={\"btn-success btn-lg mb-2\"}\n            />\n            <Modal\n                style={modalStyles}\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n            >\n                <h2>Create Form</h2>\n                <LoaderHandler loading={createLoading} error={createError} />\n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name={\"name\"}\n                        type={\"text\"}\n                        data={name}\n                        setData={setName}\n                        errors={errors}\n                    />\n                    <hr />\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Submit\n                    </button>\n\n                    <ModalButton\n                        modal={modalIsOpen}\n                        setModal={setModalIsOpen}\n                        classes={\"btn-danger float-right\"}\n                    />\n                </form>\n            </Modal>\n        </>\n    );\n\n    return (\n        <>\n            <HeaderContent name={\"Tables\"} />\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {renderModalCreateTable()}\n\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Tables</h3>\n                                    <div className=\"card-tools\">\n                                        <Search\n                                            keyword={keyword}\n                                            setKeyword={setKeyword}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderTable}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                            <Pagination\n                                page={page}\n                                pages={pages}\n                                setPage={setPageNumber}\n                            />\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default TableScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport Input from \"../../components/form/Input\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Checkbox from \"../../components/form/Checkbox\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Constants */\nimport {\n    TABLE_UPDATE_RESET,\n    TABLE_DETAILS_RESET,\n    TABLE_DELETE_RESET,\n} from \"../../constants/tableConstants\";\n\n/* Actions */\nimport { listTableDetails, updateTable } from \"../../actions/tableActions\";\n\nconst TableEditScreen = ({ history, match }) => {\n    const tableId = parseInt(match.params.id);\n\n    const [name, setName] = useState(\"\");\n    const [occupied, setOccupied] = useState(false);\n\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //table details state\n    const tableDetails = useSelector((state) => state.tableDetails);\n    const { loading, error, table } = tableDetails;\n\n    //table update state\n    const tableUpdate = useSelector((state) => state.tableUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = tableUpdate;\n\n    useEffect(() => {\n        //after update redirect to users\n        if (successUpdate) {\n            dispatch({ type: TABLE_UPDATE_RESET });\n            dispatch({ type: TABLE_DETAILS_RESET });\n            dispatch({ type: TABLE_DELETE_RESET });\n\n            history.push(\"/table\");\n        }\n\n        //load table data\n        if (table) {\n            if (!table.name || table.id !== tableId) {\n                dispatch(listTableDetails(tableId));\n            } else {\n                //set states\n                setName(table.name);\n                setOccupied(table.occupied);\n            }\n        }\n    }, [dispatch, history, tableId, table, successUpdate]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const tableUpdated = {\n                id: tableId,\n                name: name,\n                occupied: occupied,\n            };\n            dispatch(updateTable(tableUpdated));\n        }\n    };\n\n    const renderForm = () => (\n        <form onSubmit={handleSubmit}>\n            <Input\n                name={\"name\"}\n                type={\"text\"}\n                data={name}\n                setData={setName}\n                errors={errors}\n            />\n            <Checkbox name={\"occupied\"} data={occupied} setData={setOccupied} />\n\n            <hr />\n            <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Tables\"} />\n\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Edit Table</h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <LoaderHandler\n                                        loading={loadingUpdate}\n                                        error={errorUpdate}\n                                    />\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        render={renderForm}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default TableEditScreen;\n","export const CATEGORY_LIST_REQUEST = \"CATEGORY_LIST_REQUEST\";\nexport const CATEGORY_LIST_SUCCESS = \"CATEGORY_LIST_SUCCESS\";\nexport const CATEGORY_LIST_FAIL = \"CATEGORY_LIST_FAIL\";\nexport const CATEGORY_LIST_RESET = \"CATEGORY_LIST_RESET\";\n\nexport const CATEGORY_CREATE_REQUEST = \"CATEGORY_CREATE_REQUEST\";\nexport const CATEGORY_CREATE_SUCCESS = \"CATEGORY_CREATE_SUCCESS\";\nexport const CATEGORY_CREATE_FAIL = \"CATEGORY_CREATE_FAIL\";\n\nexport const CATEGORY_DETAILS_REQUEST = \"CATEGORY_DETAILS_REQUEST\";\nexport const CATEGORY_DETAILS_SUCCESS = \"CATEGORY_DETAILS_SUCCESS\";\nexport const CATEGORY_DETAILS_FAIL = \"CATEGORY_DETAILS_FAIL\";\nexport const CATEGORY_DETAILS_RESET = \"CATEGORY_DETAILS_RESET\";\n\nexport const CATEGORY_UPDATE_REQUEST = \"CATEGORY_UPDATE_REQUEST\";\nexport const CATEGORY_UPDATE_SUCCESS = \"CATEGORY_UPDATE_SUCCESS\";\nexport const CATEGORY_UPDATE_FAIL = \"CATEGORY_UPDATE_FAIL\";\nexport const CATEGORY_UPDATE_RESET = \"CATEGORY_UPDATE_RESET\";\n\nexport const CATEGORY_DELETE_REQUEST = \"CATEGORY_DELETE_REQUEST\";\nexport const CATEGORY_DELETE_SUCCESS = \"CATEGORY_DELETE_SUCCESS\";\nexport const CATEGORY_DELETE_FAIL = \"CATEGORY_DELETE_FAIL\";\nexport const CATEGORY_DELETE_RESET = \"CATEGORY_DELETE_RESET\";\n","import axios from \"../axios.conf\";\nimport {\n    CATEGORY_LIST_REQUEST,\n    CATEGORY_LIST_SUCCESS,\n    CATEGORY_LIST_FAIL,\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n    CATEGORY_UPDATE_REQUEST,\n    CATEGORY_UPDATE_SUCCESS,\n    CATEGORY_UPDATE_FAIL,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n} from \"../constants/categoryConstants\";\n\n//get all categories with pagination\nexport const listCategories =\n    (keyword = \"\", pageNumber = \"\") =>\n    async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: CATEGORY_LIST_REQUEST,\n            });\n\n            //get user from state\n            const {\n                userLogin: { userInfo },\n            } = getState();\n\n            //headers\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            };\n\n            //get all categories\n            const { data } = await axios.get(\n                `api/categories?keyword=${keyword}&pageNumber=${pageNumber}`,\n                config\n            );\n\n            dispatch({\n                type: CATEGORY_LIST_SUCCESS,\n                payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: CATEGORY_LIST_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            });\n        }\n    };\n\n//create a category\nexport const createCategory = (category) => async (dispatch, getState) => {\n    const { name } = category;\n\n    try {\n        dispatch({\n            type: CATEGORY_CREATE_REQUEST,\n        });\n\n        //get category from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //create category\n        const { data } = await axios.post(\"/api/categories\", { name }, config);\n        dispatch({\n            type: CATEGORY_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//get category details\nexport const listCategoryDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CATEGORY_DETAILS_REQUEST });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to get category\n        const { data } = await axios.get(`/api/categories/${id}`, config);\n        dispatch({\n            type: CATEGORY_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//update a category\nexport const updateCategory = (category) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_UPDATE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //update category\n        const { data } = await axios.put(\n            `api/categories/${category.id}`,\n            category,\n            config\n        );\n        dispatch({\n            type: CATEGORY_UPDATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\n//delete category\nexport const deleteCategory = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_DELETE_REQUEST,\n        });\n\n        //get user from state\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        //headers\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        //api call to delete category\n        await axios.delete(`/api/categories/${id}`, config);\n        dispatch({\n            type: CATEGORY_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Modal from \"react-modal\";\nimport Input from \"../../components/form/Input\";\nimport ModalButton from \"../../components/ModalButton\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport Select from \"../../components/Select\";\n\n/* Actions */\nimport { listProducts, createProduct } from \"../../actions/productActions\";\nimport { listCategories } from \"../../actions/categoryActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\nimport Search from \"../../components/Search\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Pagination from \"../../components/Pagination\";\nimport Message from \"../../components/Message\";\n\nModal.setAppElement(\"#root\");\n\nconst ProductScreen = ({ history }) => {\n    const [name, setName] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [stock, setStock] = useState(0);\n    const [category, setCategory] = useState(null);\n\n    const [errors, setErrors] = useState({});\n\n    const [keyword, setKeyword] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(1);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const categoryList = useSelector((state) => state.categoryList);\n    const { categories } = categoryList;\n\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, page, pages } = productList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const productCreate = useSelector((state) => state.productCreate);\n    const {\n        loading: createLoading,\n        success: createSuccess,\n        error: createError,\n    } = productCreate;\n\n    useEffect(() => {\n        if (createSuccess) {\n            setName(\"\");\n            setPrice(0);\n            setStock(0);\n            setCategory(null);\n\n            setModalIsOpen(false);\n        }\n        dispatch(listProducts(keyword, pageNumber));\n    }, [dispatch, history, userInfo, pageNumber, keyword, createSuccess]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n        if (!price) {\n            errorsCheck.price = \"Price is required\";\n        }\n\n        if (!stock) {\n            errorsCheck.stock = \"Stock is required\";\n        }\n        if (!category) {\n            errorsCheck.category = \"Category is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const product = {\n                name: name,\n                price: price,\n                stock: stock,\n                categoryId: category,\n            };\n\n            dispatch(createProduct(product));\n        }\n    };\n\n    const searchCategories = (e) => {\n        dispatch(listCategories(e.target.value));\n    };\n\n    const renderCategoriesSelect = () => (\n        <Select\n            data={category}\n            setData={setCategory}\n            items={categories}\n            search={searchCategories}\n        />\n    );\n\n    const renderModalCreateProduct = () => (\n        <>\n            <ModalButton\n                modal={modalIsOpen}\n                setModal={setModalIsOpen}\n                classes={\"btn-success btn-lg mb-2\"}\n            />\n            <Modal\n                style={modalStyles}\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n            >\n                <LoaderHandler loading={createLoading} error={createError} />\n                <h2>Create Form</h2>\n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name={\"name\"}\n                        type={\"text\"}\n                        data={name}\n                        setData={setName}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"price\"}\n                        type={\"number\"}\n                        data={price}\n                        setData={setPrice}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"stock\"}\n                        type={\"number\"}\n                        data={stock}\n                        setData={setStock}\n                        errors={errors}\n                    />\n                    {renderCategoriesSelect()}\n                    {errors.category && (\n                        <Message message={errors.category} color={\"warning\"} />\n                    )}\n                    <hr />\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Submit\n                    </button>\n                    <ModalButton\n                        modal={modalIsOpen}\n                        setModal={setModalIsOpen}\n                        classes={\"btn-danger float-right\"}\n                    />\n                </form>\n            </Modal>\n        </>\n    );\n\n    const renderProductsTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Price</th>\n                    <th>Stock</th>\n                    <th className=\"d-none d-sm-table-cell\">Created At</th>\n                    <th className=\"d-none d-sm-table-cell\">Category</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {products.map((product) => (\n                    <tr key={product.id}>\n                        <td>{product.id}</td>\n                        <td>{product.name}</td>\n                        <td>{product.price}</td>\n                        <td>{product.stock}</td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {product.createdAt.slice(0, 10)}\n                        </td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {product.category.name}\n                        </td>\n                        <td>\n                            <Link\n                                to={`/product/${product.id}/edit`}\n                                className=\"btn btn-warning btn-lg\"\n                            >\n                                Edit\n                            </Link>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    return (\n        <>\n            <HeaderContent name={\"Products\"} />\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {renderModalCreateProduct()}\n\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">\n                                        Products table\n                                    </h3>\n                                    <div className=\"card-tools\">\n                                        <Search\n                                            keyword={keyword}\n                                            setKeyword={setKeyword}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderProductsTable}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                            <Pagination\n                                page={page}\n                                pages={pages}\n                                setPage={setPageNumber}\n                            />\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ProductScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport Message from \"../../components/Message\";\nimport Select from \"../../components/Select\";\nimport Input from \"../../components/form/Input\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Constants */\nimport {\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_DETAILS_RESET,\n} from \"../../constants/productConstants\";\n\n/* Actions */\nimport { listCategories } from \"../../actions/categoryActions\";\nimport {\n    updateProduct,\n    listProductDetails,\n} from \"../../actions/productActions\";\n\nconst ProductEditScreen = ({ history, match }) => {\n    const productId = parseInt(match.params.id);\n\n    const [name, setName] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [stock, setStock] = useState(0);\n    const [category, setCategory] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const categoryList = useSelector((state) => state.categoryList);\n    const { categories } = categoryList;\n\n    //product details state\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    //product update state\n    const productUpdate = useSelector((state) => state.productUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = productUpdate;\n\n    useEffect(() => {\n        //after update redirect to users\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET });\n            dispatch({ type: PRODUCT_DETAILS_RESET });\n            history.push(\"/product\");\n        }\n\n        if (product) {\n            //load product data\n            if (!product.name || product.id !== productId) {\n                dispatch(listProductDetails(productId));\n            } else {\n                //set states\n                setName(product.name);\n                setPrice(product.price);\n                setStock(product.stock);\n                setCategory(product.categoryId);\n            }\n        }\n    }, [dispatch, history, productId, product, successUpdate]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n        if (!price) {\n            errorsCheck.price = \"Price is required\";\n        }\n\n        if (!stock) {\n            errorsCheck.stock = \"Stock is required\";\n        }\n        if (!category) {\n            errorsCheck.category = \"Category is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            dispatch(\n                updateProduct({\n                    id: productId,\n                    name,\n                    price,\n                    stock,\n                    category,\n                })\n            );\n        }\n    };\n\n    const searchCategories = (e) => {\n        dispatch(listCategories(e.target.value));\n    };\n\n    const renderCategoriesSelect = () => (\n        <Select\n            data={category}\n            setData={setCategory}\n            items={categories}\n            search={searchCategories}\n        />\n    );\n\n    const renderForm = () => (\n        <form onSubmit={handleSubmit}>\n            <Input\n                name={\"name\"}\n                type={\"text\"}\n                data={name}\n                setData={setName}\n                errors={errors}\n            />\n\n            <Input\n                name={\"price\"}\n                type={\"number\"}\n                data={price}\n                setData={setPrice}\n                errors={errors}\n            />\n\n            <Input\n                name={\"stock\"}\n                type={\"number\"}\n                data={stock}\n                setData={setStock}\n                errors={errors}\n            />\n\n            {renderCategoriesSelect()}\n            {errors.category && (\n                <Message message={errors.category} color={\"warning\"} />\n            )}\n\n            <hr />\n            <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Products\"} />\n\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Edit Product</h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <LoaderHandler\n                                        loading={loadingUpdate}\n                                        error={errorUpdate}\n                                    />\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        render={renderForm}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Modal from \"react-modal\";\nimport Input from \"../../components/form/Input\";\nimport ModalButton from \"../../components/ModalButton\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Search from \"../../components/Search\";\nimport Pagination from \"../../components/Pagination\";\n\n/* Actions */\nimport { createClient, listClients } from \"../../actions/clientActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nModal.setAppElement(\"#root\");\n\nconst ClientScreen = ({ history }) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [keyword, setKeyword] = useState(\"\");\n\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [dni, setDni] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const clientList = useSelector((state) => state.clientList);\n    const { loading, error, clients, page, pages } = clientList;\n\n    const clientCreate = useSelector((state) => state.clientCreate);\n    const {\n        loading: createLoading,\n        success: createSuccess,\n        error: createError,\n    } = clientCreate;\n\n    useEffect(() => {\n        dispatch(listClients(keyword, pageNumber));\n        if (createSuccess) {\n            setName(\"\");\n            setAddress(\"\");\n            setPhone(\"\");\n            setEmail(\"\");\n            setDni(\"\");\n            setModalIsOpen(false);\n        }\n    }, [dispatch, history, userInfo, pageNumber, keyword, createSuccess]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n        if (!address) {\n            errorsCheck.address = \"Address is required\";\n        }\n\n        if (!phone) {\n            errorsCheck.phone = \"Phone is required\";\n        }\n        if (!email) {\n            errorsCheck.email = \"Email is required\";\n        }\n\n        if (!dni) {\n            errorsCheck.dni = \"DNI is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const client = {\n                name: name,\n                address: address,\n                phone: phone,\n                email: email,\n                dni: dni,\n            };\n\n            dispatch(createClient(client));\n        }\n    };\n\n    const renderModalCreateClient = () => (\n        <>\n            <ModalButton\n                modal={modalIsOpen}\n                setModal={setModalIsOpen}\n                classes={\"btn-success btn-lg mb-2\"}\n            />\n            <Modal\n                style={modalStyles}\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n            >\n                <LoaderHandler loading={createLoading} error={createError} />\n                <h2>Create Form</h2>\n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name={\"name\"}\n                        type={\"text\"}\n                        data={name}\n                        setData={setName}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"address\"}\n                        type={\"text\"}\n                        data={address}\n                        setData={setAddress}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"phone\"}\n                        type={\"text\"}\n                        data={phone}\n                        setData={setPhone}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"email\"}\n                        type={\"email\"}\n                        data={email}\n                        setData={setEmail}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"dni\"}\n                        type={\"text\"}\n                        data={dni}\n                        setData={setDni}\n                        errors={errors}\n                    />\n                    <hr />\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Submit\n                    </button>\n                    <ModalButton\n                        modal={modalIsOpen}\n                        setModal={setModalIsOpen}\n                        classes={\"btn-danger float-right\"}\n                    />\n                </form>\n            </Modal>\n        </>\n    );\n\n    const renderClientsTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th className=\"d-none d-sm-table-cell\">Address</th>\n                    <th className=\"d-none d-sm-table-cell\">Phone</th>\n                    <th className=\"d-none d-sm-table-cell\">Email</th>\n                    <th className=\"d-none d-sm-table-cell\">DNI</th>\n                    <th className=\"d-none d-sm-table-cell\">Created At</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {clients.map((client) => (\n                    <tr key={client.id}>\n                        <td>{client.id}</td>\n                        <td>{client.name}</td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {client.address}\n                        </td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {client.phone}\n                        </td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {client.email}\n                        </td>\n                        <td className=\"d-none d-sm-table-cell\">{client.dni}</td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {client.createdAt.slice(0, 10)}\n                        </td>\n                        <td>\n                            <Link\n                                to={`/client/${client.id}/edit`}\n                                className=\"btn btn-warning btn-lg\"\n                            >\n                                Edit\n                            </Link>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    return (\n        <>\n            <HeaderContent name={\"Clients\"} />\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {renderModalCreateClient()}\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Clients</h3>\n                                    <div className=\"card-tools\">\n                                        <Search\n                                            keyword={keyword}\n                                            setKeyword={setKeyword}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderClientsTable}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n\n                            <Pagination\n                                page={page}\n                                pages={pages}\n                                setPage={setPageNumber}\n                            />\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ClientScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport Input from \"../../components/form/Input\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Constants */\nimport {\n    CLIENT_DELETE_RESET,\n    CLIENT_DETAILS_RESET,\n    CLIENT_UPDATE_RESET,\n} from \"../../constants/clientConstants\";\n\n/* Actions */\nimport { listClientDetails, updateClient } from \"../../actions/clientActions\";\n\nconst ClientEditScreen = ({ history, match }) => {\n    const clientId = parseInt(match.params.id);\n\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [dni, setDni] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //client details state\n    const clientDetails = useSelector((state) => state.clientDetails);\n    const { loading, error, client } = clientDetails;\n\n    //client update state\n    const clientUpdate = useSelector((state) => state.clientUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = clientUpdate;\n\n    useEffect(() => {\n        //after update redirect to users\n        if (successUpdate) {\n            dispatch({ type: CLIENT_UPDATE_RESET });\n            dispatch({ type: CLIENT_DETAILS_RESET });\n            dispatch({ type: CLIENT_DELETE_RESET });\n\n            history.push(\"/client\");\n        }\n\n        if (client) {\n            //load client data\n            if (!client.name || client.id !== clientId) {\n                dispatch(listClientDetails(clientId));\n            } else {\n                //set states\n                setName(client.name);\n                setAddress(client.address);\n                setPhone(client.phone);\n                setEmail(client.email);\n                setDni(client.dni);\n            }\n        }\n    }, [dispatch, history, clientId, client, successUpdate]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n        if (!address) {\n            errorsCheck.address = \"Address is required\";\n        }\n\n        if (!phone) {\n            errorsCheck.phone = \"Phone is required\";\n        }\n        if (!email) {\n            errorsCheck.email = \"Email is required\";\n        }\n\n        if (!dni) {\n            errorsCheck.dni = \"DNI is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            dispatch(\n                updateClient({\n                    id: clientId,\n                    name,\n                    address,\n                    phone,\n                    email,\n                    dni,\n                })\n            );\n        }\n    };\n\n    const renderForm = () => (\n        <form onSubmit={handleSubmit}>\n            <Input\n                name={\"Name\"}\n                type={\"text\"}\n                data={name}\n                setData={setName}\n                errors={errors}\n            />\n            <Input\n                name={\"Address\"}\n                type={\"text\"}\n                data={address}\n                setData={setAddress}\n                errors={errors}\n            />\n            <Input\n                name={\"Phone\"}\n                type={\"text\"}\n                data={phone}\n                setData={setPhone}\n                errors={errors}\n            />\n            <Input\n                name={\"Email\"}\n                type={\"email\"}\n                data={email}\n                setData={setEmail}\n                errors={errors}\n            />\n            <Input\n                name={\"DNI\"}\n                type={\"text\"}\n                data={dni}\n                setData={setDni}\n                errors={errors}\n            />\n\n            <hr />\n            <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Clients\"} />\n\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Edit Client</h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <LoaderHandler\n                                        loading={loadingUpdate}\n                                        error={errorUpdate}\n                                    />\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        render={renderForm}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ClientEditScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport ModalButton from \"../../components/ModalButton\";\nimport Modal from \"react-modal\";\nimport Input from \"../../components/form/Input\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\nimport Search from \"../../components/Search\";\nimport Pagination from \"../../components/Pagination\";\n\n/* Actions */\nimport { createCategory, listCategories } from \"../../actions/categoryActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nconst CategoryScreen = ({ history, match }) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    const [name, setName] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n    const [keyword, setKeyword] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const dispatch = useDispatch();\n\n    const categoryList = useSelector((state) => state.categoryList);\n    const { loading, error, categories, page, pages } = categoryList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const categoryCreate = useSelector((state) => state.categoryCreate);\n    const {\n        loading: createLoading,\n        success: createSuccess,\n        error: createError,\n    } = categoryCreate;\n\n    useEffect(() => {\n        dispatch(listCategories(keyword, pageNumber));\n\n        if (createSuccess) {\n            setName(\"\");\n            setModalIsOpen(false);\n        }\n    }, [dispatch, history, userInfo, pageNumber, keyword, createSuccess]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const category = {\n                name: name,\n            };\n\n            dispatch(createCategory(category));\n        }\n    };\n\n    const renderModalCreateCategory = () => (\n        <>\n            <ModalButton\n                modal={modalIsOpen}\n                setModal={setModalIsOpen}\n                classes={\"btn-success btn-lg mb-2\"}\n            />\n            <Modal\n                style={modalStyles}\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n            >\n                <h2>Create Form</h2>\n                <LoaderHandler loading={createLoading} error={createError} />\n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name={\"name\"}\n                        type={\"text\"}\n                        data={name}\n                        setData={setName}\n                        errors={errors}\n                    />\n\n                    <hr />\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Submit\n                    </button>\n\n                    <ModalButton\n                        modal={modalIsOpen}\n                        setModal={setModalIsOpen}\n                        classes={\"btn-danger float-right\"}\n                    />\n                </form>\n            </Modal>\n        </>\n    );\n\n    const renderTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th className=\"d-none d-sm-table-cell\">Created At</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {categories.map((category) => (\n                    <tr key={category.id}>\n                        <td>{category.id}</td>\n                        <td>{category.name}</td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {category.createdAt.slice(0, 10)}\n                        </td>\n                        <td>\n                            <Link\n                                to={`/category/${category.id}/edit`}\n                                className=\"btn btn-warning btn-lg\"\n                            >\n                                Edit\n                            </Link>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    return (\n        <>\n            <HeaderContent name={\"Categories\"} />\n\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {renderModalCreateCategory()}\n\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Categories</h3>\n                                    <div className=\"card-tools\">\n                                        <Search\n                                            keyword={keyword}\n                                            setKeyword={setKeyword}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderTable}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n\n                            <Pagination\n                                page={page}\n                                pages={pages}\n                                setPage={setPageNumber}\n                            />\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default CategoryScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport Message from \"../../components/Message\";\nimport Loader from \"../../components/Loader\";\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Input from \"../../components/form/Input\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\n\n/* Constants */\nimport {\n    CATEGORY_UPDATE_RESET,\n    CATEGORY_DETAILS_RESET,\n    CATEGORY_DELETE_RESET,\n} from \"../../constants/categoryConstants\";\n\n/* Actions */\nimport {\n    updateCategory,\n    listCategoryDetails,\n} from \"../../actions/categoryActions\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\nconst CategoryEditScreen = ({ history, match }) => {\n    const categoryId = parseInt(match.params.id);\n\n    const [name, setName] = useState(\"\");\n\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //category details state\n    const categoryDetails = useSelector((state) => state.categoryDetails);\n    const { loading, error, category } = categoryDetails;\n\n    //category update state\n    const categoryUpdate = useSelector((state) => state.categoryUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = categoryUpdate;\n\n    useEffect(() => {\n        //after update redirect to users\n        if (successUpdate) {\n            dispatch({ type: CATEGORY_UPDATE_RESET });\n            dispatch({ type: CATEGORY_DETAILS_RESET });\n            dispatch({ type: CATEGORY_DELETE_RESET });\n            history.push(\"/category\");\n        }\n\n        //load product data\n        if (category) {\n            if (!category.name || category.id !== categoryId) {\n                dispatch(listCategoryDetails(categoryId));\n            } else {\n                //set states\n                setName(category.name);\n            }\n        }\n    }, [dispatch, history, categoryId, category, successUpdate]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            dispatch(\n                updateCategory({\n                    id: categoryId,\n                    name,\n                })\n            );\n        }\n    };\n\n    const renderForm = () => (\n        <form onSubmit={handleSubmit}>\n            <Input\n                name={\"name\"}\n                type={\"text\"}\n                data={name}\n                setData={setName}\n                errors={errors}\n            />\n            <hr />\n            <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Categories\"} />\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">\n                                        Edit Category\n                                    </h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <LoaderHandler\n                                        loading={loadingUpdate}\n                                        error={errorUpdate}\n                                    />\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        render={renderForm}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default CategoryEditScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Input from \"../../components/form/Input\";\nimport ModalButton from \"../../components/ModalButton\";\nimport Modal from \"react-modal\";\nimport Checkbox from \"../../components/form/Checkbox\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport Search from \"../../components/Search\";\nimport Pagination from \"../../components/Pagination\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Actions */\nimport { listUsers, register } from \"../../actions/userActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nconst UserScreen = ({ history }) => {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [keyword, setKeyword] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userList = useSelector((state) => state.userList);\n    const { loading, error, users, page, pages } = userList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userRegister = useSelector((state) => state.userRegister);\n    const {\n        loading: createLoading,\n        success: createSuccess,\n        error: createError,\n    } = userRegister;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers(keyword, pageNumber));\n        }\n        if (createSuccess) {\n            setName(\"\");\n            setPassword(\"\");\n            setEmail(\"\");\n            setIsAdmin(false);\n\n            setModalIsOpen(false);\n        }\n    }, [dispatch, userInfo, pageNumber, keyword, history, createSuccess]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n        if (!name) {\n            errorsCheck.name = \"Name is required\";\n        }\n        if (!password) {\n            errorsCheck.password = \"Password is required\";\n        }\n\n        if (!email) {\n            errorsCheck.email = \"Email is required\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            const user = {\n                name: name,\n                email: email,\n                password: password,\n                isAdmin: isAdmin,\n            };\n\n            dispatch(register(user));\n        }\n    };\n\n    const renderTable = () => (\n        <table className=\"table table-hover text-nowrap\">\n            <thead>\n                <tr>\n                    <th className=\"d-none d-sm-table-cell\">ID</th>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th className=\"d-none d-sm-table-cell\">Photo</th>\n                    <th className=\"d-none d-sm-table-cell\">Admin</th>\n                    <th className=\"d-none d-sm-table-cell\">Created At</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.map((user) => (\n                    <tr key={user.id}>\n                        <td className=\"d-none d-sm-table-cell\">{user.id}</td>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            <img\n                                src={\n                                    user.image\n                                        ? user.image\n                                        : \"/dist/img/user2-160x160.jpg\"\n                                }\n                                style={{\n                                    height: \"2em\",\n                                }}\n                                className=\"img-circle elevation-2\"\n                                alt=\"User\"\n                            />\n                        </td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {user.isAdmin ? (\n                                <h4 className=\"text-success\">\n                                    <i className=\"fas fa-check\"></i>\n                                </h4>\n                            ) : (\n                                <h4 className=\"text-danger\">\n                                    <i className=\"far fa-times-circle\"></i>\n                                </h4>\n                            )}\n                        </td>\n                        <td className=\"d-none d-sm-table-cell\">\n                            {user.createdAt.slice(0, 10)}\n                        </td>\n                        <td>\n                            {user.isAdmin ? (\n                                \"\"\n                            ) : (\n                                <Link\n                                    to={`/user/${user.id}/edit`}\n                                    className=\"btn btn-warning btn-lg\"\n                                >\n                                    Edit\n                                </Link>\n                            )}\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n\n    const renderModalCreateUser = () => (\n        <>\n            <ModalButton\n                modal={modalIsOpen}\n                setModal={setModalIsOpen}\n                classes={\"btn-success btn-lg mb-2\"}\n            />\n            <Modal\n                style={modalStyles}\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n            >\n                <h2>Create Form</h2>\n                <LoaderHandler loading={createLoading} error={createError} />\n                <form onSubmit={handleSubmit}>\n                    <Input\n                        name={\"name\"}\n                        type={\"text\"}\n                        data={name}\n                        setData={setName}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"email\"}\n                        type={\"email\"}\n                        data={email}\n                        setData={setEmail}\n                        errors={errors}\n                    />\n                    <Input\n                        name={\"password\"}\n                        type={\"password\"}\n                        data={password}\n                        setData={setPassword}\n                        errors={errors}\n                    />\n                    <Checkbox\n                        name={\"Admin\"}\n                        data={isAdmin}\n                        setData={setIsAdmin}\n                    />\n\n                    <hr />\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Submit\n                    </button>\n                    <ModalButton\n                        modal={modalIsOpen}\n                        setModal={setModalIsOpen}\n                        classes={\"btn-danger float-right\"}\n                    />\n                </form>\n            </Modal>\n        </>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Users\"} />\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    {renderModalCreateUser()}\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Users table</h3>\n                                    <div className=\"card-tools\">\n                                        <Search\n                                            keyword={keyword}\n                                            setKeyword={setKeyword}\n                                            setPage={setPageNumber}\n                                        />\n                                    </div>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body table-responsive p-0\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderTable}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                            <Pagination\n                                page={page}\n                                pages={pages}\n                                setPage={setPageNumber}\n                            />\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default UserScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Input from \"../../components/form/Input\";\nimport Checkbox from \"../../components/form/Checkbox\";\nimport ButtonGoBack from \"../../components/ButtonGoBack\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Constants */\nimport {\n    USER_UPDATE_RESET,\n    USER_DETAILS_RESET,\n    USER_DELETE_RESET,\n} from \"../../constants/userConstants\";\n\n/* Actions */\nimport { listUserDetails, updateUser } from \"../../actions/userActions\";\n\nconst UserEditScreen = ({ history, match }) => {\n    const userId = parseInt(match.params.id);\n\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [avatar, setAvatar] = useState(false);\n\n    const [errors, setErrors] = useState({});\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //user details state\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    //user update state\n    const userUpdate = useSelector((state) => state.userUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = userUpdate;\n\n    useEffect(() => {\n        if (user) {\n            if (user.isAdmin) {\n                dispatch({ type: USER_UPDATE_RESET });\n                dispatch({ type: USER_DETAILS_RESET });\n                dispatch({ type: USER_DELETE_RESET });\n                history.push(\"/not-authorized\");\n            }\n        }\n        //after update redirect to users\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET });\n            dispatch({ type: USER_DETAILS_RESET });\n            dispatch({ type: USER_DELETE_RESET });\n            history.push(\"/user\");\n        }\n        //load product data\n        if (!user || !user.name || user.id !== userId) {\n            dispatch(listUserDetails(userId));\n        } else {\n            //set states s\n            setName(user.name);\n            setEmail(user.email);\n            setIsAdmin(user.isAdmin);\n        }\n    }, [dispatch, history, userId, user, successUpdate]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n        if (!name) {\n            errorsCheck.name = \"Name is required.\";\n        }\n        if (password > 1 && password < 6) {\n            errorsCheck.password =\n                \"Password must be at least 6 characters long.\";\n        }\n\n        if (!email) {\n            errorsCheck.email = \"Email is required.\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0 && !user.isAdmin) {\n            dispatch(\n                updateUser({\n                    id: userId,\n                    name,\n                    email,\n                    password,\n                    avatar,\n                    isAdmin,\n                })\n            );\n        }\n    };\n\n    const renderForm = () => (\n        <form onSubmit={handleSubmit}>\n            <Input\n                name={\"name\"}\n                type={\"text\"}\n                data={name}\n                setData={setName}\n                errors={errors}\n            />\n            <Input\n                name={\"email\"}\n                type={\"email\"}\n                data={email}\n                setData={setEmail}\n                errors={errors}\n            />\n            <Input\n                name={\"password\"}\n                type={\"password\"}\n                data={password}\n                setData={setPassword}\n                errors={errors}\n            />\n            <Checkbox name={\"Reset Avatar\"} data={avatar} setData={setAvatar} />\n            <hr />\n            <Checkbox name={\"Admin\"} data={isAdmin} setData={setIsAdmin} />\n            <hr />\n            <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Users\"} />\n\n            {/* Main content */}\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <ButtonGoBack history={history} />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">Edit User</h3>\n                                </div>\n                                {/* /.card-header */}\n                                <div className=\"card-body\">\n                                    <LoaderHandler\n                                        loading={loadingUpdate}\n                                        error={errorUpdate}\n                                    />\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        render={renderForm}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default UserEditScreen;\n","import React from \"react\";\nimport { capitalize } from \"../../utils/functions\";\nimport Loader from \"../Loader\";\n\nconst FileInput = ({ fileHandler, name, image, uploading }) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{capitalize(name)}</label>\n            <div className=\"input-group\">\n                <label htmlFor={name} className=\"custom-file-label\">\n                    {image}\n                </label>\n                <input\n                    type=\"file\"\n                    className=\"custom-file-input\"\n                    aria-describedby={name}\n                    id={name}\n                    onChange={fileHandler}\n                />\n            </div>\n            {uploading && <Loader variable={uploading} />}\n        </div>\n    );\n};\n\nexport default FileInput;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport axios from \"../../axios.conf\";\n\n/* Components */\nimport HeaderContent from \"../../components/HeaderContent\";\nimport Input from \"../../components/form/Input\";\nimport ModalButton from \"../../components/ModalButton\";\nimport FileInput from \"../../components/form/FileInput\";\nimport DataTableLoader from \"../../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../../components/loader/LoaderHandler\";\n\n/* Constants */\nimport {\n    USER_DETAILS_RESET,\n    USER_LOGOUT,\n    USER_UPDATE_RESET,\n} from \"../../constants/userConstants\";\n\n/* Actions */\nimport {\n    listUserDetails,\n    login,\n    updateProfile,\n} from \"../../actions/userActions\";\n\n/* Styles */\nimport { modalStyles } from \"../../utils/styles\";\n\nconst ProfileScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [uploading, setUploading] = useState(false);\n\n    const [modal, setModal] = useState(false);\n\n    const [errors, setErrors] = useState({});\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    //user details state\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    //user update state\n    const userUpdate = useSelector((state) => state.userUpdate);\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = userUpdate;\n\n    useEffect(() => {\n        //after update redirect to users\n        if (successUpdate) {\n            localStorage.removeItem(\"userInfo\");\n            dispatch({ type: USER_UPDATE_RESET });\n            dispatch({ type: USER_DETAILS_RESET });\n            dispatch({ type: USER_LOGOUT });\n            dispatch(login(email, password ? password : passwordCheck));\n            history.push(\"/login\");\n        }\n\n        //load product data\n        if ((!user || !user.name) && userInfo) {\n            dispatch(listUserDetails(userInfo._id));\n        } else {\n            //set states\n            setName(user.name);\n            setEmail(user.email);\n            setImage(user.image);\n        }\n    }, [dispatch, history, user, userInfo, successUpdate]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!name) {\n            errorsCheck.name = \"Name is required.\";\n        }\n\n        if (password.length > 0 && password.length < 6) {\n            errorsCheck.password =\n                \"Password must be at least 6 characters long.\";\n        }\n\n        if (!email) {\n            errorsCheck.email = \"Email is required.\";\n        }\n\n        if (confirmPassword.length > 0 && confirmPassword.length < 6) {\n            errorsCheck.confirmPassword =\n                \"Password must be at least 6 characters long.\";\n        }\n\n        if (\n            confirmPassword &&\n            confirmPassword.length > 5 &&\n            confirmPassword !== password\n        ) {\n            errorsCheck.confirmPassword = \"Passwords must be the same.\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            setModal(true);\n        }\n    };\n\n    const handleModalSubmit = (e) => {\n        e.preventDefault();\n\n        let errorsCheck = {};\n\n        if (!passwordCheck.length) {\n            errorsCheck.passwordCheck = \"Password is required.\";\n        }\n\n        if (Object.keys(errorsCheck).length > 0) {\n            setErrors(errorsCheck);\n        } else {\n            setErrors({});\n        }\n\n        if (Object.keys(errorsCheck).length === 0) {\n            dispatch(\n                updateProfile({\n                    id: userInfo._id,\n                    name,\n                    email,\n                    password,\n                    image,\n                    passwordCheck,\n                })\n            );\n            setModal(false);\n        }\n    };\n\n    // upload file\n    const uploadingFileHandler = async (e) => {\n        //get first element from files which one is the image\n        const file = e.target.files[0];\n        //form instance\n        const formData = new FormData();\n        //add file\n        formData.append(\"image\", file);\n        //start loader\n        setUploading(true);\n        try {\n            //form config\n            const config = {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                },\n            };\n            //api call to upload image\n            const { data } = await axios.post(\"/api/upload\", formData, config);\n            //set image path\n            setImage(data);\n            //stop loader\n            setUploading(false);\n        } catch (error) {\n            console.error(error);\n            setUploading(false);\n        }\n    };\n\n    const imageName = (image) => {\n        const imageArray = image.split(`uploads`);\n        return imageArray[1];\n    };\n\n    const renderForm = () => (\n        <form onSubmit={handleSubmit}>\n            <Input\n                name={\"name\"}\n                type={\"text\"}\n                data={name}\n                setData={setName}\n                errors={errors}\n            />\n            <Input\n                name={\"email\"}\n                type={\"email\"}\n                data={email}\n                setData={setEmail}\n                errors={errors}\n            />\n            <Input\n                name={\"password\"}\n                type={\"password\"}\n                data={password}\n                setData={setPassword}\n                errors={errors}\n            />\n            <Input\n                name={\"confirmPassword\"}\n                type={\"password\"}\n                data={confirmPassword}\n                setData={setConfirmPassword}\n                errors={errors}\n            />\n            <FileInput\n                fileHandler={uploadingFileHandler}\n                name={\"photo\"}\n                image={imageName(image)}\n                uploading={uploading}\n            />\n            <hr />\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                Update\n            </button>\n        </form>\n    );\n\n    const renderInfo = () => (\n        <>\n            <div className=\"text-center\">\n                <img\n                    className=\"profile-user-img img-fluid img-circle\"\n                    src={image}\n                    alt=\"User profile picture\"\n                />\n            </div>\n            <h3 className=\"profile-username text-center\">\n                {userInfo && userInfo.name}\n            </h3>\n            <p className=\"text-muted text-center\">\n                {userInfo && userInfo.isAdmin ? \"Administrator\" : \"Employee\"}\n            </p>\n        </>\n    );\n\n    const renderProfile = () => (\n        <>\n            <LoaderHandler loading={loadingUpdate} error={errorUpdate} />\n            {renderInfo()}\n            {renderForm()}\n        </>\n    );\n\n    const renderModalCheckPassword = () => (\n        <Modal\n            style={modalStyles}\n            isOpen={modal}\n            onRequestClose={() => setModal(false)}\n        >\n            <h2>Password check</h2>\n            <p>\n                For security reasons, please insert your actual password to\n                confirm changes.\n            </p>\n            <form onSubmit={handleModalSubmit}>\n                <Input\n                    name={\"passwordCheck\"}\n                    type={\"password\"}\n                    data={passwordCheck}\n                    setData={setPasswordCheck}\n                    errors={errors}\n                />\n                <hr />\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                </button>\n\n                <ModalButton\n                    modal={modal}\n                    setModal={setModal}\n                    classes={\"btn-danger float-right\"}\n                />\n            </form>\n        </Modal>\n    );\n    return (\n        <>\n            {/* Content Header (Page header) */}\n            <HeaderContent name={\"Profile\"} />\n            {/* Main content */}\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row justify-content-center\">\n                        {renderModalCheckPassword()}\n                        <div className=\"col-12 col-md-6\">\n                            {/* Profile Image */}\n                            <div className=\"card card-primary card-outline\">\n                                <div className=\"card-body box-profile\">\n                                    <LoaderHandler\n                                        loading={loading}\n                                        error={error}\n                                        loader={<DataTableLoader />}\n                                        render={renderProfile}\n                                    />\n                                </div>\n                                {/* /.card-body */}\n                            </div>\n                            {/* /.card */}\n                        </div>\n                        {/* /.col */}\n                    </div>\n                    {/* /.row */}\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default ProfileScreen;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SmallBox = ({number, paragraph, link, color, icon}) => {\n    return ( \n        <div className=\"col-lg-3 col-6\">\n            <div className={`small-box bg-${color}`}>\n                <div className=\"inner\">\n                    <h3>{number}</h3>\n                    <p>{paragraph}</p>\n                </div>\n            <div className=\"icon\">\n                <i className={icon} />\n            </div>\n            <Link to={`/${link}`} className=\"small-box-footer\">More info <i className=\"fas fa-arrow-circle-right\" /></Link>\n            </div>\n        </div>\n     );\n}\n \nexport default SmallBox;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DeliveryListItem = ({id, name, address}) => {\n    return (\n        <li className=\"item\">\n            <Link to={`/order/${id}/view`}>\n                <div className=\"product-img\">\n                    <h1 ><i className=\"fas fa-truck\"  /></h1>\n                </div>\n                <div className=\"product-info\">\n                <span className=\"product-title\">{name}\n                <span className=\"badge badge-info float-right\">ID: {id}</span></span>\n                <span className=\"product-description\">\n                    {address}\n                </span>\n                </div>\n            </Link> \n        </li>\n     );\n}\n \nexport default DeliveryListItem;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/* Components */\nimport HeaderContent from \"./../components/HeaderContent\";\nimport SmallBox from \"./../components/SmallBox\";\nimport DeliveryListItem from \"../components/DeliveryListItem\";\nimport DataTableLoader from \"../components/loader/DataTableLoader\";\nimport LoaderHandler from \"../components/loader/LoaderHandler\";\n\n/* Actions */\n\nimport {\n    OccupiedTableLoader,\n    SkeletonBoxes,\n    SkeletonSales,\n} from \"../components/loader/SkeletonLoaders\";\nimport { getStatistics } from \"../actions/orderActions\";\n\nconst DashboardScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    //user state\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const orderStatistics = useSelector((state) => state.orderStatistics);\n    const { loading, error, data } = orderStatistics;\n\n    const { orders, sales, statistics } = data;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\");\n        }\n        dispatch(getStatistics());\n    }, [dispatch, history, userInfo]);\n\n    //get all in place orders\n    const ordersInPlace = (orders) => {\n        const ordersInPlace = orders.filter(function (item) {\n            return item.delivery === false;\n        });\n\n        return ordersInPlace;\n    };\n\n    const getTodaySales = (items) => {\n        let day = new Date();\n        day = day.toISOString().slice(8, 10);\n        const newSales = items.filter(function (item) {\n            const saleDay = item.updatedAt.slice(8, 10);\n            return day === saleDay;\n        });\n        return newSales;\n    };\n\n    //get all delivery orders\n    const ordersForDelivery = (orders) => {\n        const ordersForDelivery = orders.filter(function (item) {\n            return item.delivery === true;\n        });\n\n        return ordersForDelivery;\n    };\n\n    //table row click from in place orders\n    const handleRowClick = (e, id) => {\n        e.preventDefault();\n        history.push(`/order/${id}/view`);\n    };\n\n    const returnSales = () => {\n        var indents = [];\n        for (var i = 0; i < (sales.length > 3 ? 4 : sales.length); i++) {\n            indents.push(\n                <tr key={sales[i].id}>\n                    <td className=\"font-weight-bold\">{sales[i].id}</td>\n                    <td className=\"h4\">\n                        {sales[i].delivery ? (\n                            <span className={\"badge bg-primary\"}>IN PLACE</span>\n                        ) : (\n                            <span className={\"badge bg-info\"}>DELIVERY</span>\n                        )}\n                    </td>\n                    <td className=\"h4\">\n                        <span className={\"badge bg-success\"}>\n                            ${sales[i].total}\n                        </span>\n                    </td>\n                    <td className=\"h4\">\n                        <span className={\"badge bg-warning\"}>\n                            {sales[i].products.length}\n                        </span>\n                    </td>\n                    <td>\n                        <Link\n                            to={`/order/${sales[i].id}/view`}\n                            className=\"btn btn-info\"\n                        >\n                            <i className=\"fas fa-search\"></i>\n                        </Link>\n                    </td>\n                </tr>\n            );\n        }\n        return indents;\n    };\n\n    const renderSmallBoxes = () => (\n        <>\n            <SmallBox\n                number={orders.length}\n                paragraph={\"Active orders\"}\n                link={\"order\"}\n                color={\"success\"}\n                icon={\"fas fa-utensils\"}\n            />\n\n            <SmallBox\n                number={ordersInPlace(orders).length}\n                paragraph={\"In Place Orders\"}\n                link={\"active\"}\n                color={\"info\"}\n                icon={\"fas fa-users\"}\n            />\n            <SmallBox\n                number={ordersForDelivery(orders).length}\n                paragraph={\"Orders for delivery\"}\n                link={\"delivery\"}\n                color={\"danger\"}\n                icon={\"fas fa-truck\"}\n            />\n\n            <SmallBox\n                number={orders.length}\n                paragraph={\"Total orders\"}\n                link={\"order\"}\n                color={\"warning\"}\n                icon={\"ion ion-bag\"}\n            />\n        </>\n    );\n\n    const renderSales = () => (\n        <div className=\"row\">\n            <div className=\"col-12 col-lg-6\">\n                <div className=\"card\">\n                    <div className=\"card-header border-0\">\n                        <h3 className=\"card-title\">Last Sales</h3>\n                        <div className=\"card-tools\">\n                            <Link to=\"/order\" className=\"btn btn-tool btn-sm\">\n                                <i className=\"nav-icon far fa-clipboard\" />\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"card-body table-responsive p-0\">\n                        <table className=\"table table-striped table-valign-middle text-center\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Type</th>\n                                    <th>Total</th>\n                                    <th>Products</th>\n                                    <th>More</th>\n                                </tr>\n                            </thead>\n                            <tbody>{returnSales(sales)}</tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-12 col-lg-6\">\n                <div className=\"card\">\n                    <div className=\"card-header border-0\">\n                        <h3 className=\"card-title\">Comandera Overview</h3>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"d-flex justify-content-between align-items-center border-bottom mb-3\">\n                            <p className=\"text-warning text-xl\">\n                                <i className=\"fas fa-shopping-cart\"></i>\n                            </p>\n                            <p className=\"d-flex flex-column text-right\">\n                                <span className=\"font-weight-bold\">\n                                    <i className=\"ion ion-android-arrow-up text-warning\" />{\" \"}\n                                    {statistics && statistics.orders}\n                                </span>\n                                <span className=\"text-muted\">\n                                    TOTAL ORDERS COMPLETED\n                                </span>\n                            </p>\n                        </div>\n                        {/* /.d-flex */}\n                        <div className=\"d-flex justify-content-between align-items-center border-bottom mb-3\">\n                            <p className=\"text-info text-xl\">\n                                <i className=\"fas fa-truck\"></i>\n                            </p>\n                            <p className=\"d-flex flex-column text-right\">\n                                <span className=\"font-weight-bold\">\n                                    <i className=\"ion ion-android-arrow-up text-info\" />{\" \"}\n                                    {statistics && statistics.deliveries}\n                                </span>\n                                <span className=\"text-muted\">\n                                    TOTAL DELIVERIES COMPLETED\n                                </span>\n                            </p>\n                        </div>\n                        <div className=\"d-flex justify-content-between align-items-center border-bottom mb-3\">\n                            <p className=\"text-success text-xl\">\n                                <i className=\"fas fa-money-bill-wave\"></i>\n                            </p>\n                            <p className=\"d-flex flex-column text-right\">\n                                <span className=\"font-weight-bold\">\n                                    <span className=\"text-success\">\n                                        <i className=\"fas fa-dollar-sign text-success\"></i>{\" \"}\n                                        {statistics && statistics.today}\n                                    </span>\n                                </span>\n                                <span className=\"text-muted\">TODAY SALES</span>\n                            </p>\n                        </div>\n                        {/* /.d-flex */}\n                        <div className=\"d-flex justify-content-between align-items-center mb-0\">\n                            <p className=\"text-danger text-xl\">\n                                <i className=\"fas fa-piggy-bank\"></i>\n                            </p>\n                            <p className=\"d-flex flex-column text-right\">\n                                <span className=\"font-weight-bold\">\n                                    <span className=\"text-success\">\n                                        <i className=\"fas fa-dollar-sign\"></i>{\" \"}\n                                        {statistics && statistics.total}\n                                    </span>\n                                </span>\n                                <span className=\"text-muted\">TOTAL SALES</span>\n                            </p>\n                        </div>\n                        {/* /.d-flex */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    const renderOrders = () => (\n        <table className=\"table m-0 table-hover\">\n            <thead>\n                <tr>\n                    <th>Order ID</th>\n                    <th>Client</th>\n                    <th>Table</th>\n                    <th>Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                {ordersInPlace(orders)\n                    .splice(0, 5)\n                    .map((order) => (\n                        <tr\n                            key={order.id}\n                            onClick={(e) => handleRowClick(e, order.id)}\n                            style={{\n                                cursor: \"pointer\",\n                            }}\n                        >\n                            <td>\n                                <h4>\n                                    <span className={\"badge bg-primary\"}>\n                                        {order.id}\n                                    </span>\n                                </h4>\n                            </td>\n                            <td>{order.client ? order.client.name : \"\"}</td>\n                            <td>{order.table ? order.table.name : \"\"}</td>\n                            <td>\n                                <h4>\n                                    <span className={\"badge bg-success\"}>\n                                        ${order.total}\n                                    </span>\n                                </h4>\n                            </td>\n                        </tr>\n                    ))}\n            </tbody>\n        </table>\n    );\n\n    const renderDeliveries = () =>\n        ordersForDelivery(orders)\n            .splice(0, 5)\n            .map((order) => (\n                <DeliveryListItem\n                    id={order.id}\n                    name={order.client ? order.client.name : \"\"}\n                    address={order.client ? order.client.address : \"\"}\n                    key={order.id}\n                />\n            ));\n\n    return (\n        <>\n            <HeaderContent name={\"Dashboard\"} />\n\n            <section className=\"content\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <LoaderHandler\n                            loading={loading}\n                            error={error}\n                            loader={<SkeletonBoxes />}\n                            render={renderSmallBoxes}\n                        />\n                    </div>\n\n                    {userInfo.isAdmin && (\n                        <LoaderHandler\n                            loading={loading}\n                            error={error}\n                            loader={<SkeletonSales />}\n                            render={renderSales}\n                        />\n                    )}\n\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-9\">\n                            <div className=\"card\">\n                                <div className=\"card-header border-transparent\">\n                                    <h3 className=\"card-title\">\n                                        Latest In Place Orders\n                                    </h3>\n                                    <div className=\"card-tools\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-tool\"\n                                            data-card-widget=\"collapse\"\n                                        >\n                                            <i className=\"fas fa-minus\" />\n                                        </button>\n                                    </div>\n                                </div>\n                                <div className=\"card-body p-0\">\n                                    <div className=\"table-responsive\">\n                                        <LoaderHandler\n                                            loading={loading}\n                                            error={error}\n                                            loader={<DataTableLoader />}\n                                            render={renderOrders}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"card-footer clearfix\">\n                                    <Link\n                                        to={\"/order/create\"}\n                                        className=\"btn btn-sm btn-info float-left\"\n                                    >\n                                        Place New Order\n                                    </Link>\n                                    <Link\n                                        to={\"/order\"}\n                                        className=\"btn btn-sm btn-secondary float-right\"\n                                    >\n                                        View All Orders\n                                    </Link>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-3\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"card-title\">\n                                        Recently Added Delivery Orders\n                                    </h3>\n                                    <div className=\"card-tools\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-tool\"\n                                            data-card-widget=\"collapse\"\n                                        >\n                                            <i className=\"fas fa-minus\" />\n                                        </button>\n                                    </div>\n                                </div>\n                                <div className=\"card-body p-0\">\n                                    <ul className=\"products-list product-list-in-card pl-2 pr-2\">\n                                        <LoaderHandler\n                                            loading={loading}\n                                            loader={<DataTableLoader />}\n                                            error={error}\n                                            render={renderDeliveries}\n                                        />\n                                    </ul>\n                                </div>\n                                <div className=\"card-footer text-center\">\n                                    <Link\n                                        to={\"/delivery\"}\n                                        className=\"uppercase\"\n                                    >\n                                        View All Delivery Orders\n                                    </Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* /.container-fluid */}\n            </section>\n        </>\n    );\n};\n\nexport default DashboardScreen;\n","//check if user is authenticated\nexport const isAuthenticated = () => {\n    if(typeof window == 'undefined'){\n        return false;\n    }\n    if(localStorage.getItem('userInfo')){\n        return JSON.parse(localStorage.getItem('userInfo'));\n    }else{\n        return false;\n    }\n}","import React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\n//private route, only show for authenticated users\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={props => isAuthenticated() ?\n    (\n        <Component {...props}/>\n    ) : (\n        <Redirect to={{\n            pathname: \"/login\", \n            state: {from: props.location}\n        }} />\n    )\n\n    } />\n);\n\nexport default PrivateRoute;","import React from 'react';\n\nconst NotFoundScreen = () => {\n    return ( <h1>\n        Not Found\n    </h1> );\n}\n \nexport default NotFoundScreen;","import React, {Component} from 'react'\nimport {Route, Redirect} from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\n//private route, only show for admin users\nconst AdminRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={props => isAuthenticated() && isAuthenticated().isAdmin === true ?\n    (\n        <Component {...props}/>\n    ) : (\n        <Redirect to={{\n            pathname: \"/not-authorized\", \n            state: {from: props.location}\n        }} />\n    )\n\n    } />\n);\n\nexport default AdminRoute;","import React from 'react';\n\nconst NotAuthorizedScreen = () => {\n    return ( \n        <h1>\n            No Authorized\n        </h1>\n     );\n}\n \nexport default NotAuthorizedScreen;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Menu from \"./components/Menu\";\nimport Footer from \"./components/Footer\";\n\n/* SCREENS */\nimport OrderScreen from \"./screens/order/OrderScreen\";\nimport DeliveryScreen from \"./screens/order/DeliveryScreen\";\nimport OrderCreateScreen from \"./screens/order/OrderCreateScreen\";\nimport OrderViewScreen from \"./screens/order/OrderViewScreen \";\nimport ActiveOrdersScreen from \"./screens/order/ActiveOrdersScreen\";\nimport OrderEditScreen from \"./screens/order/OrderEditScreen\";\n\nimport TableScreen from \"./screens/table/TableScreen\";\nimport TableEditScreen from \"./screens/table/TableEditScreen\";\n\nimport ProductScreen from \"./screens/product/ProductScreen\";\nimport ProductEditScreen from \"./screens/product/ProductEditScreen\";\n\nimport ClientScreen from \"./screens/client/ClientScreen\";\nimport ClientEditScreen from \"./screens/client/ClientEditScreen\";\n\nimport CategoryScreen from \"./screens/category/CategoryScreen\";\nimport CategoryEditScreen from \"./screens/category/CategoryEditScreen\";\n\nimport UserScreen from \"./screens/user/UserScreen\";\nimport UserEditScreen from \"./screens/user/UserEditScreen\";\nimport ProfileScreen from \"./screens/user/ProfileScreen\";\n\nimport DashboardScreen from \"./screens/DashboardScreen\";\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport NotFoundScreen from \"./screens/NotFoundScreen\";\nimport AdminRoute from \"./auth/AdminRoute\";\nimport NotAuthorizedScreen from \"./screens/NotAuthorizedScreen\";\n\nconst Main = () => {\n    const dispatch = useDispatch();\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    return (\n        <>\n            <Header />\n            <Menu />\n\n            <div className=\"content-wrapper\">\n                <Switch>\n                    <PrivateRoute\n                        path=\"/active\"\n                        exact\n                        component={ActiveOrdersScreen}\n                    />\n                    <PrivateRoute path=\"/profile\" component={ProfileScreen} />\n                    <AdminRoute\n                        path=\"/user/:id/edit\"\n                        component={UserEditScreen}\n                    />\n                    <AdminRoute path=\"/user\" exact component={UserScreen} />\n\n                    <PrivateRoute\n                        path=\"/category/:id/edit\"\n                        component={CategoryEditScreen}\n                    />\n                    <PrivateRoute path=\"/category\" component={CategoryScreen} />\n\n                    <PrivateRoute path=\"/delivery\" component={DeliveryScreen} />\n\n                    <PrivateRoute\n                        path=\"/client/:id/edit\"\n                        component={ClientEditScreen}\n                    />\n\n                    <PrivateRoute path=\"/client\" component={ClientScreen} />\n\n                    <PrivateRoute\n                        path=\"/product/:id/edit\"\n                        component={ProductEditScreen}\n                    />\n\n                    <PrivateRoute path=\"/product\" component={ProductScreen} />\n\n                    <PrivateRoute\n                        path=\"/table/:id/edit\"\n                        component={TableEditScreen}\n                    />\n                    <PrivateRoute path=\"/table\" component={TableScreen} />\n\n                    <PrivateRoute\n                        path=\"/order/create/:id/table\"\n                        component={OrderCreateScreen}\n                    />\n\n                    <PrivateRoute\n                        path=\"/order/:id/edit\"\n                        component={OrderEditScreen}\n                        exact\n                    />\n\n                    <PrivateRoute\n                        path=\"/order/:id/view\"\n                        component={OrderViewScreen}\n                        exact\n                    />\n                    <PrivateRoute\n                        path=\"/order/create\"\n                        component={OrderCreateScreen}\n                    />\n                    <PrivateRoute path=\"/order\" component={OrderScreen} />\n                    <PrivateRoute\n                        path=\"/not-authorized\"\n                        component={NotAuthorizedScreen}\n                    />\n                    <PrivateRoute path=\"/\" component={DashboardScreen} />\n                    <Route component={NotFoundScreen} />\n                </Switch>\n            </div>\n            <Footer />\n        </>\n    );\n};\n\nexport default Main;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../actions/userActions\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\n\nconst LoginScreen = ({ history }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    //get user from state\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo, error, loading } = userLogin;\n\n    useEffect(() => {\n        //if user is logged\n        if (userInfo) {\n            history.push(\"/dashboard\");\n        }\n    }, [history, userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    };\n\n    return (\n        <div\n            className=\"row justify-content-center align-items-center vh-100\"\n            style={{ backgroundColor: \"#cad5df\" }}\n        >\n            <div className=\"login-box\">\n                {/* /.login-logo */}\n                <div className=\"card\">\n                    <div className=\"card-header \">\n                        <div className=\"login-logo\">\n                            <b>BAKANO</b>\n                            <div className=\"text-center\">\n                                <img\n                                    className=\"profile-user-img img-fluid img-circle\"\n                                    src={\"/logo.png\"}\n                                    alt=\"User profile picture\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-body login-card-body\">\n                        <p className=\"login-box-msg\">\n                            Sign in to start your session\n                        </p>\n                        {loading && <Loader variable={loading} />}\n                        {error && <Message message={error} color={\"danger\"} />}\n                        <form onSubmit={submitHandler}>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-envelope\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={(e) =>\n                                        setPassword(e.target.value)\n                                    }\n                                />\n                                <div className=\"input-group-append\">\n                                    <div className=\"input-group-text\">\n                                        <span className=\"fas fa-lock\" />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row justify-content-end\">\n                                <div className=\"col-4\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block\"\n                                    >\n                                        Sign In\n                                    </button>\n                                </div>\n                            </div>\n                            <br />\n                        </form>\n                        <div></div>\n                    </div>\n                    {/* /.login-card-body */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginScreen;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Main from \"./Main\";\nimport LoginScreen from \"./screens/auth/LoginScreen\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/login\" component={LoginScreen} />\n                <Route path=\"/\" component={Main} />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DELETE_RESET,\n} from \"./../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true };\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const userListReducer = (\n    state = { loading: true, users: [] },\n    action\n) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true, users: [] };\n        case USER_LIST_SUCCESS:\n            return {\n                loading: false,\n                users: action.payload.users,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LIST_RESET:\n            return { users: [] };\n        default:\n            return state;\n    }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, success: true };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return { user: {} };\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true, user: action.payload };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return { user: {} };\n        default:\n            return state;\n    }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n    userLoginReducer,\n    userListReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n    categoryListReducer,\n    categoryCreateReducer,\n    categoryDetailsReducer,\n    categoryUpdateReducer,\n} from \"./reducers/categoryReducers\";\n\nimport {\n    tableAllReducer,\n    tableListReducer,\n    tableCreateReducer,\n    tableDetailsReducer,\n    tableUpdateReducer,\n} from \"./reducers/tableReducers\";\n\nimport {\n    clientListReducer,\n    clientCreateReducer,\n    clientDetailsReducer,\n    clientUpdateReducer,\n} from \"./reducers/clientReducers\";\n\nimport {\n    productListReducer,\n    productCreateReducer,\n    productDetailsReducer,\n    productUpdateReducer,\n} from \"./reducers/productReducers\";\n\nimport {\n    orderListReducer,\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderUpdateReducer,\n    statisticsReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userList: userListReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdate: userUpdateReducer,\n\n    categoryList: categoryListReducer,\n    categoryCreate: categoryCreateReducer,\n    categoryDetails: categoryDetailsReducer,\n    categoryUpdate: categoryUpdateReducer,\n\n    productList: productListReducer,\n    productCreate: productCreateReducer,\n    productDetails: productDetailsReducer,\n    productUpdate: productUpdateReducer,\n\n    tableAll: tableAllReducer,\n    tableList: tableListReducer,\n    tableCreate: tableCreateReducer,\n    tableDetails: tableDetailsReducer,\n    tableUpdate: tableUpdateReducer,\n\n    clientList: clientListReducer,\n    clientCreate: clientCreateReducer,\n    clientDetails: clientDetailsReducer,\n    clientUpdate: clientUpdateReducer,\n\n    orderStatistics: statisticsReducer,\n    orderList: orderListReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderUpdate: orderUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\n    : null;\n\nconst initialState = {\n    userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n    CATEGORY_LIST_REQUEST,\n    CATEGORY_LIST_SUCCESS,\n    CATEGORY_LIST_FAIL,\n    CATEGORY_LIST_RESET,\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n    CATEGORY_DETAILS_RESET,\n    CATEGORY_UPDATE_REQUEST,\n    CATEGORY_UPDATE_SUCCESS,\n    CATEGORY_UPDATE_FAIL,\n    CATEGORY_UPDATE_RESET,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n    CATEGORY_DELETE_RESET,\n} from \"../constants/categoryConstants\";\n\nexport const categoryListReducer = (\n    state = { loading: true, categories: [] },\n    action\n) => {\n    switch (action.type) {\n        case CATEGORY_LIST_REQUEST:\n            return { loading: true, categories: [] };\n        case CATEGORY_LIST_SUCCESS:\n            return {\n                loading: false,\n                categories: action.payload.categories,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case CATEGORY_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CATEGORY_LIST_RESET:\n            return { categories: [] };\n        default:\n            return state;\n    }\n};\n\nexport const categoryCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CATEGORY_CREATE_REQUEST:\n            return { loading: true };\n        case CATEGORY_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case CATEGORY_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const categoryDetailsReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n        case CATEGORY_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CATEGORY_DETAILS_SUCCESS:\n            return { loading: false, category: action.payload };\n        case CATEGORY_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case CATEGORY_DETAILS_RESET:\n            return { category: {} };\n        default:\n            return state;\n    }\n};\n\nexport const categoryUpdateReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n        case CATEGORY_UPDATE_REQUEST:\n            return { loading: true };\n        case CATEGORY_UPDATE_SUCCESS:\n            return { loading: false, success: true, category: action.payload };\n        case CATEGORY_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CATEGORY_UPDATE_RESET:\n            return { category: {} };\n        default:\n            return state;\n    }\n};\n\nexport const categoryDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CATEGORY_DELETE_REQUEST:\n            return { loading: true };\n        case CATEGORY_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CATEGORY_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CATEGORY_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_RESET,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_RESET,\n} from \"../constants/productConstants\";\n\nexport const productListReducer = (\n    state = { loading: true, products: [] },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] };\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_LIST_RESET:\n            return { products: [] };\n        default:\n            return state;\n    }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload };\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_DETAILS_RESET:\n            return { product: {} };\n        default:\n            return state;\n    }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload };\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} };\n        default:\n            return state;\n    }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true };\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import {\n    TABLE_LIST_REQUEST,\n    TABLE_LIST_SUCCESS,\n    TABLE_LIST_FAIL,\n    TABLE_LIST_RESET,\n    TABLE_CREATE_REQUEST,\n    TABLE_CREATE_SUCCESS,\n    TABLE_CREATE_FAIL,\n    TABLE_DETAILS_REQUEST,\n    TABLE_DETAILS_SUCCESS,\n    TABLE_DETAILS_FAIL,\n    TABLE_DETAILS_RESET,\n    TABLE_UPDATE_REQUEST,\n    TABLE_UPDATE_SUCCESS,\n    TABLE_UPDATE_FAIL,\n    TABLE_UPDATE_RESET,\n    TABLE_DELETE_REQUEST,\n    TABLE_DELETE_SUCCESS,\n    TABLE_DELETE_FAIL,\n    TABLE_DELETE_RESET,\n    TABLE_ALL_REQUEST,\n    TABLE_ALL_SUCCESS,\n    TABLE_ALL_FAIL,\n    TABLE_ALL_RESET,\n} from \"../constants/tableConstants\";\n\nexport const tableListReducer = (\n    state = { loading: true, tables: [] },\n    action\n) => {\n    switch (action.type) {\n        case TABLE_LIST_REQUEST:\n            return { loading: true, tables: [] };\n        case TABLE_LIST_SUCCESS:\n            return {\n                loading: false,\n                tables: action.payload.tables,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case TABLE_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            };\n        case TABLE_LIST_RESET:\n            return { tables: [] };\n        default:\n            return state;\n    }\n};\n\nexport const tableAllReducer = (\n    state = { loading: true, tables: [] },\n    action\n) => {\n    switch (action.type) {\n        case TABLE_ALL_REQUEST:\n            return { loading: true, tables: [] };\n        case TABLE_ALL_SUCCESS:\n            return {\n                tables: action.payload,\n                loading: false,\n            };\n        case TABLE_ALL_FAIL:\n            return { loading: false, error: action.payload };\n        case TABLE_ALL_RESET:\n            return { tables: [] };\n        default:\n            return state;\n    }\n};\n\nexport const tableCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case TABLE_CREATE_REQUEST:\n            return { loading: true };\n        case TABLE_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case TABLE_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const tableDetailsReducer = (state = { table: {} }, action) => {\n    switch (action.type) {\n        case TABLE_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case TABLE_DETAILS_SUCCESS:\n            return { loading: false, table: action.payload };\n        case TABLE_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case TABLE_DETAILS_RESET:\n            return { table: {} };\n        default:\n            return state;\n    }\n};\n\nexport const tableUpdateReducer = (state = { table: {} }, action) => {\n    switch (action.type) {\n        case TABLE_UPDATE_REQUEST:\n            return { loading: true };\n        case TABLE_UPDATE_SUCCESS:\n            return { loading: false, success: true, table: action.payload };\n        case TABLE_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case TABLE_UPDATE_RESET:\n            return { table: {} };\n        default:\n            return state;\n    }\n};\n\nexport const tableDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case TABLE_DELETE_REQUEST:\n            return { loading: true };\n        case TABLE_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case TABLE_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case TABLE_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import {\n    CLIENT_LIST_REQUEST,\n    CLIENT_LIST_SUCCESS,\n    CLIENT_LIST_FAIL,\n    CLIENT_LIST_RESET,\n    CLIENT_CREATE_REQUEST,\n    CLIENT_CREATE_SUCCESS,\n    CLIENT_CREATE_FAIL,\n    CLIENT_DETAILS_REQUEST,\n    CLIENT_DETAILS_SUCCESS,\n    CLIENT_DETAILS_FAIL,\n    CLIENT_DETAILS_RESET,\n    CLIENT_UPDATE_REQUEST,\n    CLIENT_UPDATE_SUCCESS,\n    CLIENT_UPDATE_FAIL,\n    CLIENT_UPDATE_RESET,\n    CLIENT_DELETE_REQUEST,\n    CLIENT_DELETE_SUCCESS,\n    CLIENT_DELETE_FAIL,\n    CLIENT_DELETE_RESET,\n} from \"../constants/clientConstants\";\n\nexport const clientListReducer = (\n    state = { loading: true, clients: [] },\n    action\n) => {\n    switch (action.type) {\n        case CLIENT_LIST_REQUEST:\n            return { loading: true, clients: [] };\n        case CLIENT_LIST_SUCCESS:\n            return {\n                loading: false,\n                clients: action.payload.clients,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case CLIENT_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_LIST_RESET:\n            return { clients: [] };\n        default:\n            return state;\n    }\n};\n\nexport const clientCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CLIENT_CREATE_REQUEST:\n            return { loading: true };\n        case CLIENT_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const clientDetailsReducer = (state = { client: {} }, action) => {\n    switch (action.type) {\n        case CLIENT_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case CLIENT_DETAILS_SUCCESS:\n            return { loading: false, client: action.payload };\n        case CLIENT_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_DETAILS_RESET:\n            return { client: {} };\n        default:\n            return state;\n    }\n};\n\nexport const clientUpdateReducer = (state = { client: {} }, action) => {\n    switch (action.type) {\n        case CLIENT_UPDATE_REQUEST:\n            return { loading: true };\n        case CLIENT_UPDATE_SUCCESS:\n            return { loading: false, success: true, client: action.payload };\n        case CLIENT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_UPDATE_RESET:\n            return { client: {} };\n        default:\n            return state;\n    }\n};\n\nexport const clientDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CLIENT_DELETE_REQUEST:\n            return { loading: true };\n        case CLIENT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case CLIENT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case CLIENT_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import {\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_RESET,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_RESET,\n    ORDER_UPDATE_REQUEST,\n    ORDER_UPDATE_SUCCESS,\n    ORDER_UPDATE_FAIL,\n    ORDER_UPDATE_RESET,\n    ORDER_DELETE_REQUEST,\n    ORDER_DELETE_SUCCESS,\n    ORDER_DELETE_FAIL,\n    ORDER_DELETE_RESET,\n    ORDER_STATISTICS_REQUEST,\n    ORDER_STATISTICS_SUCCESS,\n    ORDER_STATISTICS_FAIL,\n    ORDER_STATISTICS_RESET,\n    ORDER_CREATE_RESET,\n} from \"../constants/orderConstants\";\n\nexport const orderListReducer = (\n    state = { loading: true, orders: [] },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return { loading: true, orders: [] };\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case ORDER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_LIST_RESET:\n            return { orders: [] };\n        default:\n            return state;\n    }\n};\n\nexport const statisticsReducer = (\n    state = {\n        loading: true,\n        data: {\n            orders: [],\n            sales: [],\n            statistics: {\n                total: 0,\n                today: 0,\n                orders: 0,\n                deliveries: 0,\n            },\n        },\n    },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_STATISTICS_REQUEST:\n            return { loading: true, ...state };\n        case ORDER_STATISTICS_SUCCESS:\n            return {\n                loading: false,\n                data: action.payload,\n            };\n        case ORDER_STATISTICS_FAIL:\n            return { loading: false, error: action.payload, ...state };\n        case ORDER_STATISTICS_RESET:\n            return {\n                ...state,\n                data: {\n                    orders: [],\n                    sales: [],\n                    statistics: {\n                        total: 0,\n                        today: 0,\n                        orders: 0,\n                        deliveries: 0,\n                    },\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return { loading: true };\n        case ORDER_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case ORDER_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return { ...state, loading: true };\n        case ORDER_DETAILS_SUCCESS:\n            return { loading: false, order: action.payload };\n        case ORDER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_DETAILS_RESET:\n            return { order: {} };\n        default:\n            return state;\n    }\n};\n\nexport const orderUpdateReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n        case ORDER_UPDATE_REQUEST:\n            return { loading: true };\n        case ORDER_UPDATE_SUCCESS:\n            return { loading: false, success: true, order: action.payload };\n        case ORDER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_UPDATE_RESET:\n            return { order: {} };\n        default:\n            return state;\n    }\n};\n\nexport const orderDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELETE_REQUEST:\n            return { loading: true };\n        case ORDER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case ORDER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_DELETE_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","exports.capitalize = (s) => {\n    if (typeof s !== \"string\") return \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n","exports.modalStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        width: 400,\n        transform: \"translate(-50%, -50%)\",\n    },\n};\n"],"sourceRoot":""}